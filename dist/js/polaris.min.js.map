{"version":3,"file":"polaris.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAiB,QAAID,IAErBD,EAAc,QAAIC,GACnB,CATD,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,4BCG3E,MAAMI,EAAb,cACW,KAAAC,OAA8B,IAC9B,KAAAC,OAA8B,KAC9B,KAAAC,OAA8B,IAC9B,KAAAC,OAA8B,KAE9B,KAAAC,QAA8B,MAC9B,KAAAC,UAA8B,QAC9B,KAAAC,SAA8B,OAC9B,KAAAC,cAA8B,YAC9B,KAAAC,aAA8B,WAC9B,KAAAC,WAA8B,SAC9B,KAAAC,UAA8B,QAC9B,KAAAC,aAA8B,MAC9B,KAAAC,aAA8B,WAC9B,KAAAC,UAA8B,QAC9B,KAAAC,SAA8B,OAC9B,KAAAC,UAA8B,QAE9B,KAAAC,cAA8B,YAC9B,KAAAC,cAA8B,YAC9B,KAAAC,YAA8B,UAC9B,KAAAC,SAA8B,OAC9B,KAAAC,YAA8B,UAC9B,KAAAC,UAA8B,QAC9B,KAAAC,UAA8B,QAC9B,KAAAC,WAA8B,SAC9B,KAAAC,SAA8B,OAC9B,KAAAC,SAA8B,OAC9B,KAAAC,WAA8B,SAC9B,KAAAC,SAA8B,OAC9B,KAAAC,WAA8B,SAC9B,KAAAC,UAA8B,IAC9B,KAAAC,WAA8B,IAC9B,KAAAC,WAA8B,QAC9B,KAAAC,aAA8B,WAE9B,KAAAC,gBAA8B,SAC9B,KAAAC,iBAA8B,UAC9B,KAAAC,eAA8B,QAC9B,KAAAC,gBAA8B,SAC9B,KAAAC,oBAA8B,aAE9B,KAAAC,cAA8B,kBAC9B,KAAAC,WAA8B,oBAC9B,KAAAC,YAA8B,gBAC9B,KAAAC,QAA8B,WAE9B,KAAAC,YAA8B,IAC9B,KAAAC,cAA8B,SAE9B,KAAAC,aAA8B,CAAC,KAAM,KAAM,KAAM,KAAM,MAEvD,KAAAC,WAA8B,EAC9B,KAAAC,YAA8B,IAC9B,KAAAC,aAA8B,IACzC,EClDO,MAAMC,UAAgBjD,EAKzBkD,cAEIC,QAiZG,KAAAC,aAAe,CAACC,EAAaC,EAAcC,GAAiB,IAC3DA,EACOF,EAAIG,MAAMF,GAAMG,MAGhBH,EAAOD,EAAIG,MAAMF,GAAMG,MAc/B,KAAAC,YAAc,CAACL,EAAYC,EAAaC,GAAiB,IACxDA,EACOF,EAAIG,MAAMF,GAAM,GAGhBD,EAAIG,MAAMF,GAAM,GAAKA,CAxapC,CAUOK,MAAMC,EAAgB,MAEzB,IAAIC,EAAiB,CAAC,EAqCtB,OAlCAA,EAAS,CACLC,QAAS,EACTC,QAAS,WAIRH,EAQyB,iBAAf,EACuC,GAA9CI,SAASC,iBAAiBL,GAAUM,SACpCL,EAAS,CACLC,QAAS,EACTC,QAAS,iBAAiBH,wCAMR,iBAAf,GACY,GAAnBA,EAASM,SACTL,EAAS,CACLC,QAAS,EACTC,QAAS,yDArBjBF,EAAS,CACLC,QAAS,EACTC,QAAS,qDAyBVF,CACX,CAUOD,SAASA,GAEZ,GAAyB,iBAAf,EACN,KAAM,yCAEL,GAAIO,KAAKR,MAAMC,GAAkB,OAElC,OAAOI,SAASI,cAAcR,GAG9B,MAAMO,KAAKR,MAAMC,GAAmB,OAE5C,CAUOS,UAAUT,GAEb,GAAyB,iBAAf,EACN,KAAM,yCAEL,GAAIO,KAAKR,MAAMC,GAAkB,OAElC,OAAOI,SAASC,iBAAiBL,GAGjC,MAAMO,KAAKR,MAAMC,GAAmB,OAE5C,CAYOU,QAAQV,EAAeW,EAAe,OAAQC,EAAoB,GACrE,IAAIX,GAAkB,EAClBY,EAAY,KACZC,EAAeC,OAAOC,YACtBC,EAAaC,KAAKC,IAAIf,SAASgB,gBAAgBC,aAAcP,GAGjE,IAAIP,KAAKR,MAAMC,GAAkB,OAU7B,MAAMO,KAAKR,MAAMC,GAAmB,QAmBxC,MA5B6B,iBAAf,GACNa,EAAOT,SAASI,cAAcR,GAC9Ba,EAAOA,EAAKS,yBAEgB,iBAAf,IACbT,EAAOb,EAASsB,yBAQZ,QAARX,EACAV,EAASY,EAAKU,QAAUX,GAAaC,EAAKW,IAAMP,EAAaL,EAIhD,OAARD,EACLV,EAASY,EAAKW,IAAMP,EAAaL,EAIpB,UAARD,IACLV,EAASY,EAAKU,QAAUX,GAIrBX,CACX,CAgBOwB,QAAQzB,EAAkB0B,EAAaC,EAAiBC,EAAsB,GAAIC,EAAa,GAAIC,EAAgB,GAAIC,EAAY,CAAC,GACvI,IAAIC,EAAkB,KAGtB,GAAyB,iBAAf,EACN,KAAM,yCAIV,IAAIzB,KAAKR,MAAM2B,GAAgB,OAS3B,MAAMnB,KAAKR,MAAM2B,GAAiB,QARX,iBAAb,EACNM,EAAa5B,SAASI,cAAckB,GAEV,iBAAb,IACbM,EAAaN,GAQrB,MAAMO,EAAY7B,SAAS8B,cAAclC,GAkBzC,GAfA4B,EAAUO,SAASC,IACfH,EAAKL,UAAUS,IAAID,EAAI,IAIvBP,GACAI,EAAKK,aAAa,KAAMT,GAIxBC,IACAG,EAAKH,MAAMS,QAAUT,GAIrBC,EACA,IAAK,IAAIS,KAAQT,EACbE,EAAKK,aAAaE,EAAMT,EAAMS,IAStC,OAJAP,EAAKQ,UAAYd,EACjBK,EAAWU,aAAaT,EAAMD,EAAWW,YAGlCV,CACX,CAgBOW,OAAO5C,EAAkB0B,EAAaC,EAAiBC,EAAsB,GAAIC,EAAa,GAAIC,EAAgB,GAAIC,EAAY,CAAC,GACtI,IAAIC,EAAkB,KAGtB,GAAyB,iBAAf,EACN,KAAM,yCAIV,IAAIzB,KAAKR,MAAM2B,GAAgB,OAS3B,MAAMnB,KAAKR,MAAM2B,GAAiB,QARX,iBAAb,EACNM,EAAa5B,SAASI,cAAckB,GAEV,iBAAb,IACbM,EAAaN,GAQrB,MAAMO,EAAY7B,SAAS8B,cAAclC,GAkBzC,GAfA4B,EAAUO,SAASC,IACfH,EAAKL,UAAUS,IAAID,EAAI,IAIvBP,GACAI,EAAKK,aAAa,KAAMT,GAIxBC,IACAG,EAAKH,MAAMS,QAAUT,GAIrBC,EACA,IAAK,IAAIS,KAAQT,EACbE,EAAKK,aAAaE,EAAMT,EAAMS,IAStC,OAJAP,EAAKQ,UAAYd,EACjBK,EAAWa,YAAYZ,GAGhBA,CACX,CAUOa,OAAO9C,GACV,IAAIiC,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQfiC,EAAKa,QACT,CAUOC,MAAMpB,EAAkB,IAEvBvB,SAAS4C,KAAK,aACd5C,SAAS2C,MAAMpB,GACfvB,SAAS6C,OACjB,CAYOC,KAAKC,EAASC,EAAgB,IAAMC,EAAgBC,KACvD,IAAIC,EAAY,EACZC,EAAWC,aAAY,KAEvB,GAAIF,GAAKF,GAASA,GAAS,EAEvB,OADAK,cAAcF,IACP,EAIXL,IAEAI,GAAG,GACJH,EACP,CAUOO,OAAOR,GACV,OAAO/C,SAASwD,iBAAiB,oBAAoB,KACjDT,GAAI,GAEZ,CAUOU,OAAOpE,GACV,OAAOA,EAAIqE,QAAQ,sBAAuB,OAC9C,CAYOA,QAAQrE,EAAaC,EAAcoE,GACtC,OAAOrE,EAAIqE,QAAQ,IAAIC,OAAOxD,KAAKsD,OAAOnE,GAAO,KAAMoE,EAC3D,CAgDOE,SAASC,EAAc,KAC1BlD,OAAOmD,SAASC,KAAOF,CAC3B,CAQOE,OACH,OAAO5D,KAAKuD,QAAQ/C,OAAOmD,SAASC,KAAMpD,OAAOmD,SAASE,OAAQ,GACtE,CAQOC,cACN,OAAOtD,OAAOuD,WAAalE,SAASgB,gBAAgBmD,WACrD,CAUOC,MAAMC,GAET,IAAIC,EAAU,IAAIC,eAOlB,OAJAD,EAAI1B,KAAK,OAAQyB,GAAM,GACvBC,EAAIE,OAGc,OAAdF,EAAIxE,MAOZ,CAUO2E,KAAKJ,EAAa9E,GAAe,GAEpC,QAAIA,IAEKY,KAAKiE,MAAMC,KAMJ,IAAIK,SAAQ,CAACC,EAASC,KAClC,IAAIC,EAAY,KAGhBC,MAAMT,GACLU,MAAKC,GAAYA,EAASP,SAC1BM,MAAKlF,IACFgF,EAAQhF,CAAM,IAEjBkF,MAAK,KAEFJ,EAAQE,EAAM,GAChB,GAKV,CAUOI,KAAKZ,EAAa9E,GAAe,GAEpC,QAAIA,IAEKY,KAAKiE,MAAMC,KAMJ,IAAIK,SAAQ,CAACC,EAASC,KAClC,IAAIC,EAAY,KAGhBC,MAAMT,GACLU,MAAKC,GAAYA,EAASC,SAC1BF,MAAKlF,IACFgF,EAAQhF,CAAM,IAEjBkF,MAAK,KAEFJ,EAAQE,EAAM,GAChB,GAKV,CAUOK,KAAKD,GAgBR,OAdoB,IAAIP,SAAQ,CAACC,EAASC,KACtC,IAAI/E,EAAa,KACjBsF,UAAUC,UAAUC,UAAUJ,GAC7BF,MAAK,IAAMlF,GAAS,IAAMyF,IACvBC,QAAQC,MAAM,eAAgBF,GAC9BzF,GAAS,CAAK,IAEjBkF,MAAK,KAEFJ,EAAQ9E,EAAO,GACjB,GAKV,CAWO4F,SAAS7F,EAAcoC,GAC1B,IAAIH,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQViC,EAAKL,UAAUkE,SAAS1D,IACzBH,EAAKL,UAAUS,IAAID,EAE3B,CAWO2D,YAAY/F,EAAcoC,GAC7B,IAAIH,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQXiC,EAAKL,UAAUkE,SAAS1D,IACxBH,EAAKL,UAAUkB,OAAOV,EAE9B,CAYO4D,YAAYhG,EAAciG,EAAeC,GAC5C,IAAIjE,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQXiC,EAAKL,UAAUkE,SAASG,IACxBhE,EAAKL,UAAUkB,OAAOmD,GAIrBhE,EAAKL,UAAUkE,SAASI,IACzBjE,EAAKL,UAAUS,IAAI6D,EAE3B,CAWOC,WAAWnG,EAAc4B,GAC5B,IAAIK,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQf4B,EAAUO,SAASC,IAEVH,EAAKL,UAAUkE,SAAS1D,IACzBH,EAAKL,UAAUS,IAAID,E,GAG/B,CAUOgE,MAAMf,GACT,OAAOA,EAAKgB,mBAChB,CAUOC,MAAMjB,GACT,OAAOA,EAAKkB,mBAChB,CAUOC,SAASxG,EAAeyG,GAC3B,IAAIxE,EAAMhC,EAINgC,EADoB,iBAAd,EACC7B,SAASC,iBAAiBL,GAG1BA,EAIX,MAAM0G,GAAQzE,EAAK0E,eAAiBvG,UAAUwG,YAU9C,OATIF,GAAQA,EAAKG,mBACb5G,EAASyG,EAAKG,iBAAiB5E,EAAM,MAAM6E,iBAAiBL,IAQzDxG,CACX,EC/wBG,MAAM8G,UAAmB1H,EAK5BC,cAEIC,OACJ,CAYOyH,UAAUhH,EAAegH,EAAoB,GAAIC,GAAiB,GACrE,IAAIhF,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QAIxC,MAZ6B,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQE,IAAbgH,GAGA/E,EAAKH,MAAMoF,eAAe,mBAGnB,GAiBK,IAAIpC,SAAQ,CAACC,EAASC,KAElCzE,KAAK4G,SAASlF,GAIdA,EAAKH,MAAMsF,YAAY,iBAAkBJ,GAoBzC/E,EAAK2B,iBAAiB,gBAjBtB,SAAsByD,GAClBA,EAAMC,kBAGFL,GAEAhF,EAAKH,MAAMoF,eAAe,kBAI9BnC,EAAQ,oBAGRC,EAAO,qBACX,GAGoD,CAACuC,MAAM,GAAM,GAKzE,CAUOJ,SAASnH,GAERA,EAASwH,QAAQR,WACjBhH,EAAS8B,MAAMsF,YAAY,iBAAkBpH,EAASwH,QAAQR,WAI9DhH,EAASwH,QAAQC,UACjBzH,EAAS8B,MAAMsF,YAAY,uBAAwBpH,EAASwH,QAAQC,UAIpEzH,EAASwH,QAAQpE,OACjBpD,EAAS8B,MAAMsF,YAAY,oBAAqBpH,EAASwH,QAAQpE,OAIjEpD,EAASwH,QAAQnE,OACjBrD,EAAS8B,MAAMsF,YAAY,oBAAqBpH,EAASwH,QAAQnE,OAIjErD,EAASwH,QAAQE,UACjB1H,EAAS8B,MAAMsF,YAAY,uBAAwBpH,EAASwH,QAAQE,UAIpE1H,EAASwH,QAAQG,OACjB3H,EAAS8B,MAAMsF,YAAY,oBAAqBpH,EAASwH,QAAQG,OAIjE3H,EAASwH,QAAQI,UACjB5H,EAAS8B,MAAMsF,YAAY,uBAAwBpH,EAASwH,QAAQI,UAIpE5H,EAASwH,QAAQK,OACjB7H,EAAS8B,MAAMsF,YAAY,oBAAqBpH,EAASwH,QAAQK,OAIjE7H,EAASwH,QAAQM,aACjB9H,EAAS8B,MAAMsF,YAAY,0BAA2BpH,EAASwH,QAAQM,aAIvE9H,EAASwH,QAAQO,QACjB/H,EAAS8B,MAAMsF,YAAY,qBAAsBpH,EAASwH,QAAQO,QAIlE/H,EAASwH,QAAQQ,QACjBhI,EAAS8B,MAAMsF,YAAY,qBAAsBpH,EAASwH,QAAQQ,QAIlEhI,EAASwH,QAAQS,OACjBjI,EAAS8B,MAAMsF,YAAY,oBAAqBpH,EAASwH,QAAQS,OAIjEjI,EAASwH,QAAQU,YACjBlI,EAAS8B,MAAMsF,YAAY,yBAA0BpH,EAASwH,QAAQU,YAItElI,EAASwH,QAAQW,WACjBnI,EAAS8B,MAAMsF,YAAY,wBAAyBpH,EAASwH,QAAQW,UAE7E,CAWOC,SAASpI,EAA2BqI,EAAc,UACrD,IAAIC,EAAa,KAGjB,IAAI/H,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNsI,EAAQlI,SAASC,iBAAiBL,GAEN,iBAAf,IACbsI,EAAQtI,GAOhBsI,EAAMnG,SAASF,IACX,IAAIrB,EAAYqB,EAAKuF,QAAQ5G,UACzB2H,EAAiBtG,EAAKuF,QAAQgB,MAC9BC,EAAgBxG,EAAKuF,QAAQkB,KAG5B9H,IACDA,EAAY,GAIX2H,IACDA,EAAiB,UAIhBE,IACDA,EAAgB,WAIhBlI,KAAKG,QAAQuB,EAAMoG,EAAKzH,GAExBL,KAAKyG,UAAU/E,EAAMsG,GAIrBhI,KAAKyG,UAAU/E,EAAMwG,E,GAGjC,CAYOE,UAAU3I,EAA2ByH,EAAmB,IAAMpE,EAAgBC,KACjF,IAAIrB,EAAY,KAGhB,IAAI1B,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QARX,iBAAf,EACNiC,EAAO7B,SAASI,cAAcR,GAEF,iBAAf,IACbiC,EAAOjC,GAQXO,KAAKG,QAAQuB,EAAM,OAAQ,IAC3B1B,KAAK2C,MAAK,KACN,IAAI8D,EAAY/E,EAAK2G,aAAa,kBAGlC3G,EAAKH,MAAMoF,eAAe,kBAE1BjF,EAAK4G,UAGL5G,EAAKH,MAAMsF,YAAY,iBAAkBJ,EAAU,GACpDS,EAAUpE,EAAQ,EAE7B,CAaOyF,UAAU9I,EAA2BuF,EAA4BwD,EAAiB,SAAUnI,EAAmB,GAClH,IAAIH,EAAiB,KACjBuI,EAAkB,KAGtB,IAAIzI,KAAKR,MAAMC,GAAkB,OAS7B,MAAMO,KAAKR,MAAMC,GAAmB,QAIxC,GAZ6B,iBAAf,EACNS,EAAYL,SAASC,iBAAiBL,GAEV,iBAAf,IACbS,EAAYT,IAQhBO,KAAKR,MAAMwF,GAAmB,OAS9B,MAAMhF,KAAKR,MAAMwF,GAAoB,QARX,iBAAhB,EACNyD,EAAa5I,SAASC,iBAAiBkF,GAEV,iBAAhB,IACbyD,EAAazD,GAQrB9E,EAAU0B,SAASF,IACf,IAAIT,EAAMT,OAAOkI,QACbjB,EAAS/F,EAAKiH,aACdC,EAASlH,EAAK4G,UAAYjI,EAC1BiB,EAAKI,EAAK2G,aAAa,MAGvBpH,GAAO2H,GAAU3H,EAAM2H,EAASnB,GAChCgB,EAAW7G,SAASiH,IAChBA,EAAKxH,UAAUkB,OAAOiG,GACtB3I,SAASI,cAAc,GAAG+E,WAAmB1D,KAAOD,UAAUS,IAAI0G,EAAO,G,GAIzF,ECxUG,MAAMM,UAAetC,EAKxBzH,cAEIC,OACJ,CAkBO+J,MAAMjE,EAAcmD,EAAe,SAAUE,EAAe,UAAWxI,EAAiB,GAAIqJ,EAAgB,GAAItG,GAAiB,EAAMwE,EAAmB,IAAKrE,EAAgB,KAElL,IAAIoG,EAAsB,GACtBC,EAAsB,GAEtBvJ,IAAQuJ,EAAc,IAAIlJ,KAAKxD,UAAYwD,KAAKlE,OAASkE,KAAK/C,YAEnD,WAAX0C,EACAsJ,EAAa,eAAejJ,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK/C,YAAY+C,KAAK5B,wBAEjE,YAAXuB,EACLsJ,EAAa,eAAejJ,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK/C,YAAY+C,KAAK3B,qBAEjE,YAAXsB,IACLsJ,EAAa,eAAejJ,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK/C,YAAY+C,KAAK1B,uBAIrF,IAAI6K,EAAqB,GACX,UAAVH,IACAG,EAAa,IAAInJ,KAAKxD,UAAYwD,KAAKlE,OAASkN,KAIpD,IAAII,EAAoB,GACpBC,EAAqB,GACrB3G,IACA0G,EAAY,eAAepJ,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK7C,aAAa6C,KAAKzB,kBACjF8K,EAAa,IAAIrJ,KAAKxD,UAAYwD,KAAKlE,OAASkE,KAAK7C,aAIzD,IAAIiE,EAAW,eAAepB,KAAKxD,UAAY2M,EAAaD,EAAcG,KAAcrJ,KAAK3D,wCAAwC4L,4BAAgCf,SACjK9F,GAAW6H,EACX7H,GAAW,eAAepB,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK9C,gBAC9DkE,GAAW0D,EACX1D,GAAW,SACXA,GAAWgI,EACXhI,GAAW,SAGf,MAAMD,EAActB,SAASI,cAAc,IAAID,KAAKxD,UAAY,IAAMwD,KAAKlD,eAGrEwM,EAAezJ,SAAS8B,cAAc,OAG5C2H,EAAQjI,UAAUS,IAAI9B,KAAKxD,UAAYwD,KAAK/D,OAAS+D,KAAKhD,YAAagD,KAAK3D,eAC5EiN,EAAQ/H,MAAMS,QAAU,yBAAyBkF,mCACjDoC,EAAQpH,UAAYd,EAGpBD,EAAOmB,YAAYgH,GAGnB,MAAMC,EAAQD,EAAQrJ,cAAc,IAAID,KAAKxD,aAG7C,IAAIgN,EAAUC,YAAW,KACrBzJ,KAAKyG,UAAU8C,EAAOpB,GACtBqB,EAAUC,YAAW,KACjBzJ,KAAKyG,UAAU6C,EAAStJ,KAAK/B,gBAAgB2G,MAAK,KAC9C0E,EAAQ/G,QAAQ,GAClB,GACHM,EAAM,GACV7C,KAAKxB,aAGL8K,EAAQrJ,cAAc,IAAID,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK7C,eAC7DmM,EAAQrJ,cAAc,IAAID,KAAKxD,UAAYwD,KAAKjE,OAASiE,KAAK7C,aAAauM,QAAU,KACjFC,aAAaH,GACbxJ,KAAKyG,UAAU8C,EAAOpB,GACtBqB,EAAUC,YAAW,KACjBzJ,KAAKyG,UAAU6C,EAAStJ,KAAK/B,gBAAgB2G,MAAK,KAC9C0E,EAAQ/G,QAAQ,GAClB,GACHM,EAAM,EAGrB,ECzGG,MAAM+G,UAAcd,EAKvB/J,cAEIC,OACJ,CAmBO6K,MAAMC,EAAeC,EAAcC,EAAiB,GAAIC,EAAc,KAAMhC,EAAe,SAAUE,EAAe,UAAWa,EAAgB,GAAItG,GAAiB,EAAMwH,GAAoB,EAAMhD,EAAmB,KAG1N,IAAIiD,EAAoB,GAEpBA,EADAnK,KAAKtB,aAAa0L,SAASH,GACf,IAAIjK,KAAKnD,UAAYmD,KAAKlE,OAASmO,IAE1CA,EACO,IAAIA,IAEJ,IAAIjK,KAAKrC,gBAIzB,IAAIwL,EAAqB,GACX,UAAVH,IACAG,EAAa,IAAInJ,KAAKnD,UAAYmD,KAAKlE,OAASkN,KAIpD,IAAII,EAAoB,GACpB1G,IACA0G,EAAY,eAAepJ,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAK7C,aAAa6C,KAAKzB,mBAIrF,IAAI8L,EAAqB,GACrBL,IACAK,EAAa,kBAAkBrK,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAKtC,eAAesM,YAItF,IAAI5I,EAAW,eAAepB,KAAKnD,UAAYsN,EAAYhB,KAAcnJ,KAAK3D,0EAA0E4L,4BAAgCf,SACpL9F,GAAWgI,EACXhI,GAAW,kBAAkBpB,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAKxC,eACjE4D,GAAW,OAAO0I,SAClB1I,GAAW,YACXA,GAAW,gBAAgBpB,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAKvC,aAC/D2D,GAAW2I,EACX3I,GAAW,UACXA,GAAWiJ,EACXjJ,GAAW,SAGf,MAAMD,EAActB,SAASI,cAAc,IAAID,KAAKnD,UAAY,IAAMmD,KAAKlD,eAGrEwN,EAAazK,SAASI,cAAc,IAAID,KAAKtD,gBAG7C4M,EAAezJ,SAAS8B,cAAc,OAG5CR,EAAOmB,YAAYgH,GAGnBA,EAAQiB,UAAYnJ,EAGpB,MAAMmI,EAAQpI,EAAOlB,cAAc,IAAID,KAAKnD,aAG5C,IAAI2N,EAAmB3K,SAASI,cAAc,QACpDuK,EAAYjJ,MAAMkJ,aAAezK,KAAK8D,cAAgB,KACtD0G,EAAYjJ,MAAMmJ,SAAW,SAGnBR,GACAlK,KAAKyG,UAAU6D,EAAOtK,KAAKjC,iBAI/BiC,KAAKyG,UAAUtF,EAAQnB,KAAKjC,iBAGzBwL,EAAMtJ,cAAc,IAAID,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAK7C,eAC3DoM,EAAMtJ,cAAc,IAAID,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAK7C,aAAauM,QAAU,KAE3EQ,GACAlK,KAAKyG,UAAU6D,EAAOtK,KAAKhC,kBAI/ByL,YAAW,KACPe,EAAYjJ,MAAMkJ,aAAe,GACjCD,EAAYjJ,MAAMmJ,SAAW,EAAE,GAChCxD,EAAW,GAGdlH,KAAKyG,UAAU8C,EAAOpB,GAAMvD,MAAK,KAE7B2E,EAAMhH,SAGNvC,KAAKyG,UAAUtF,EAAQnB,KAAKhC,iBAAiB,GAC/C,EAGd,CAcO2M,SAASxJ,EAAY8G,EAAe,SAAUE,EAAe,UAAW+B,GAAoB,EAAMhD,EAAmB,KAExH,IAAIzF,EACwB,iBAAb,EAAuBA,EAAa5B,SAASI,cAAckB,GAC9C,iBAAb,IAAuBM,EAAaN,GAGnD,MAAM0I,EAAapI,EAAWxB,cAAc,IAAID,KAAKnD,aAG/CyN,EAAazK,SAASI,cAAc,IAAID,KAAKtD,gBAGnD,IAAI8N,EAAmB3K,SAASI,cAAc,QACpDuK,EAAYjJ,MAAMkJ,aAAezK,KAAK8D,cAAgB,KACtD0G,EAAYjJ,MAAMmJ,SAAW,SAGnBR,GACAlK,KAAKyG,UAAU6D,EAAOtK,KAAKjC,iBAI/BiC,KAAKyG,UAAUhF,EAAYzB,KAAKjC,iBAGhCiC,KAAKyG,UAAUoD,EAAO5B,GAGnB4B,EAAM5J,cAAc,IAAID,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAK7C,eAC3D0M,EAAM5J,cAAc,IAAID,KAAKnD,UAAYmD,KAAKjE,OAASiE,KAAK7C,aAAauM,QAAU,KAE3EQ,GACAlK,KAAKyG,UAAU6D,EAAOtK,KAAKhC,kBAI/ByL,YAAW,KACPe,EAAYjJ,MAAMkJ,aAAe,GACjCD,EAAYjJ,MAAMmJ,SAAW,EAAE,GAChCxD,EAAW,GAGdlH,KAAKyG,UAAUoD,EAAO1B,GAAMvD,MAAK,KAE7B5E,KAAKyG,UAAUhF,EAAYzB,KAAKhC,iBAAiB,GACnD,EAGd,EC5LG,MAAM4M,UAAiBhB,EAK1B7K,cAEIC,OACJ,CAQO6L,cACH,IAAIC,EAAUjL,SAASI,cAAc,QAQrC,GALK6K,EAAIzJ,UAAUkE,SAAS,GAAGvF,KAAK9D,YAChC4O,EAAIzJ,UAAUS,IAAI,GAAG9B,KAAK9D,YAIzB4O,EAAIzJ,UAAUkE,SAAS,GAAGvF,KAAK9D,QAAU8D,KAAKlE,OAASkE,KAAK7D,eAC5D2O,EAAIzJ,UAAUkE,SAAS,GAAGvF,KAAK9D,QAAU8D,KAAKlE,OAASkE,KAAK5D,YAAa,CAE1E,IAAI2O,EAIAA,EADAvK,OAAOwK,YAAcxK,OAAOwK,WAAW,gCAAgCC,QAC9DjL,KAAK5D,SAIL4D,KAAK7D,UAIlB2O,EAAIzJ,UAAUS,IAAI,GAAG9B,KAAK9D,QAAU8D,KAAKlE,OAASiP,KAGlDvK,OAAOwK,WAAW,gCAAgCE,SAAYpE,IAE1D9G,KAAKwF,YAAY,IAAIxF,KAAK9D,UAAW,GAAG8D,KAAK9D,QAAU8D,KAAKlE,OAASiP,KAGrEA,EAASjE,EAAMmE,QAAUjL,KAAK5D,SAAW4D,KAAK7D,UAG9C2O,EAAIzJ,UAAUS,IAAI,GAAG9B,KAAK9D,QAAU8D,KAAKlE,OAASiP,IACrD,C,CAET,CAQOI,eACCtL,SAASC,iBAAiB,IAAIE,KAAK1C,YAAYyC,QAC/CF,SAASC,iBAAiB,IAAIE,KAAK1C,YAAYsE,SAASwJ,IAElB,MAA9BA,EAAK/C,aAAa,SAClB+C,EAAKrJ,aAAa,OAAQ,qB,GAS1C,CAQOsJ,iBAICxL,SAASC,iBAAiB,IAAIE,KAAKzD,cAAcwD,SAEjDF,SAASC,iBAAiB,IAAIE,KAAKzD,6BAA6ByD,KAAK9B,oBAAoB0D,SAASwJ,IAC9FA,EAAK1B,QAAW5C,IACZ,IAAIwE,EAAIxE,EAAMyE,QAASC,EAAI1E,EAAM2E,QACjC,MAAMC,EAAMN,EAAKrK,wBAAyB4K,EAAMhL,KAAKiL,KAAKjL,KAAKkL,IAAIH,EAAIhE,MAAO,GAAK/G,KAAKkL,IAAIH,EAAIjE,OAAQ,IAGxG2D,EAAKU,gBAAgB,kBAErBV,EAAK9C,UAGL8C,EAAKrJ,aAAa,iBAAkB/B,KAAK9B,iBAEzCkN,EAAK7J,MAAMsF,YAAY,wBAAyB8E,EAAM,MACtDP,EAAK7J,MAAMsF,YAAY,mBAAoByE,EAAII,EAAIK,KAAO,MAC1DX,EAAK7J,MAAMsF,YAAY,kBAAmB2E,EAAIE,EAAIzK,IAAM,MAGxDjB,KAAK4G,SAASwE,EAAK,CACtB,IAILvL,SAASC,iBAAiB,IAAIE,KAAKzD,6BAA6ByD,KAAK7B,wBAAwByD,SAASwJ,IAElGpL,KAAK4G,SAASwE,EAAK,IAG/B,CAQOY,oBACCnM,SAASC,iBAAiB,IAAIE,KAAK3D,iBAAiB0D,QACpDF,SAASC,iBAAiB,IAAIE,KAAK3D,iBAAiBuF,SAASwJ,IAEzDpL,KAAK4G,SAASwE,EAAK,GAG/B,CAQOa,kBACCpM,SAASC,iBAAiB,IAAIE,KAAKvD,aAAeuD,KAAKjE,OAASiE,KAAK7C,aAAa4C,QAClFF,SAASC,iBAAiB,IAAIE,KAAKvD,aAAeuD,KAAKjE,OAASiE,KAAK7C,aAAayE,SAASwJ,IACvFA,EAAK1B,QAAU,KACX,IAAIvI,EAASiK,EAAKc,cAAcA,cAEhClM,KAAKyG,UAAUtF,EAAQnB,KAAK/B,gBAAgB2G,MAAK,KAC7CzD,EAAOoB,QAAQ,GACjB,CACL,GAGb,CAQO4J,gBACCtM,SAASC,iBAAiB,IAAIE,KAAKrD,UAAYqD,KAAK/D,OAAS+D,KAAKhD,eAAe+C,QACjFF,SAASC,iBAAiB,IAAIE,KAAKrD,UAAYqD,KAAK/D,OAAS+D,KAAKhD,eAAe4E,SAASwJ,IAElFA,EAAKnL,cAAc,IAAID,KAAKrD,UAAYqD,KAAKlE,OAASkE,KAAK5C,eAC3DgO,EAAK1B,QAAW1G,IAEZ,IAAIoJ,EAAQhB,EAAKnL,cAAc,IAAID,KAAKrD,UAAYqD,KAAKlE,OAASkE,KAAK5C,aAGnEiP,GAAc,EAQlB,GAPAjB,EAAKtL,iBAAiB,IAAIE,KAAKrD,oBAAoBqD,KAAKrD,UAAYqD,KAAKjE,OAASiE,KAAK7C,cAAcyE,SAAS0K,IACtGtJ,EAAEuJ,QAAUD,IACZD,GAAc,E,KAKlBA,GAAerJ,EAAEuJ,QAAUH,EAY/B,OATIhB,EAAKnL,cAAc,IAAID,KAAKrD,UAAYqD,KAAKlE,OAASkE,KAAKzC,YAC3D6O,EAAM/K,UAAUkB,OAAO,GAAGvC,KAAKrD,UAAYqD,KAAKlE,OAASkE,KAAKzC,YAI9D6O,EAAM/K,UAAUS,IAAI,GAAG9B,KAAKrD,UAAYqD,KAAKlE,OAASkE,KAAKzC,aAIxD,CAAK,E,GAKhC,CAQOiP,eAEC3M,SAASC,iBAAiB,IAAIE,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAK5C,aAAa2C,QAC9EF,SAASC,iBAAiB,IAAIE,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAK5C,aAAawE,SAASwJ,IACnFA,EAAKnL,cAAc,IAAID,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAK5C,eAAesM,QAAU,KAE/E,IAAI+C,EAAUrB,EAAKnL,cAAc,IAAID,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAK5C,gBAGxE,GAAIqP,EAAQpL,UAAUkE,SAAS,GAAGvF,KAAK3D,iBAAkB,CACrD,IAAIqQ,EAAqBC,EAGrBF,EAAQpL,UAAUkE,SAAS,GAAGvF,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAKzC,aACjEmP,EAAe,UACfC,EAAe,SAGXF,EAAQpE,aAAa,eAAcqE,EAAcD,EAAQpE,aAAa,cAGtEoE,EAAQpE,aAAa,gBAAesE,EAAeF,EAAQpE,aAAa,iBAI5EqE,EAAe,SACfC,EAAe,UAGXF,EAAQpE,aAAa,gBAAeqE,EAAcD,EAAQpE,aAAa,eAGvEoE,EAAQpE,aAAa,eAAcsE,EAAeF,EAAQpE,aAAa,eAI9B,SAA7CrI,KAAKiG,SAASwG,EAAS,kBACnBzM,KAAKiG,SAASwG,EAAS,mBAAqBC,EAC5C1M,KAAKyG,UAAUgG,EAASE,GAEnB3M,KAAKiG,SAASwG,EAAS,mBAAqBE,GACjD3M,KAAKyG,UAAUgG,EAASC,GAG5B1M,KAAKyG,UAAUgG,EAASC,E,MAIvBD,EAAQpL,UAAUkE,SAAS,GAAGvF,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAKzC,YACtEkP,EAAQpL,UAAUkB,OAAO,GAAGvC,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAKzC,YAI/DkP,EAAQpL,UAAUS,IAAI,GAAG9B,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAKzC,YAIhE,OAAO,CAAK,CACf,IAKLsC,SAASC,iBAAiB,IAAIE,KAAKpD,oBAAoBoD,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAK5C,cAAc2C,QACxGF,SAASC,iBAAiB,IAAIE,KAAKpD,oBAAoBoD,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAK5C,cAAcwE,SAASwJ,IAE7G,IAAIqB,EAAUrB,EAAKnL,cAAc,IAAID,KAAKpD,kBAAkBoD,KAAK3D,iBACjE,GAAIoQ,EAAS,CACT,IAAIC,EAAqBC,EAGrBF,EAAQpL,UAAUkE,SAAS,GAAGvF,KAAKpD,SAAWoD,KAAKjE,OAASiE,KAAKzC,aACjEmP,EAAe,UACfC,EAAe,SAGXF,EAAQpE,aAAa,eAAcqE,EAAcD,EAAQpE,aAAa,cAGtEoE,EAAQpE,aAAa,gBAAesE,EAAeF,EAAQpE,aAAa,iBAI5EqE,EAAe,SACfC,EAAe,UAGXF,EAAQpE,aAAa,gBAAeqE,EAAcD,EAAQpE,aAAa,eAGvEoE,EAAQpE,aAAa,eAAcsE,EAAeF,EAAQpE,aAAa,eAI/E+C,EAAKwB,YAAc,KAEf5M,KAAKyG,UAAUgG,EAASC,GAAa9H,MAAM,EAI/CwG,EAAKyB,WAAa,KAEd7M,KAAKyG,UAAUgG,EAASE,EAAa,C,IAKzD,ECvTG,MAAMG,UAAmBlC,EAK5B7L,cAEIC,OACJ,CAQO+N,oBAEElN,SAASI,cAAc,IAAID,KAAKtD,aAAe,IAAMsD,KAAKlD,gBAE3DkD,KAAKqC,OAAO,MAAO,OAAQ,GAAI,CAACrC,KAAKtD,aAAcsD,KAAK3D,cAAe2D,KAAK3D,cAAgB2D,KAAKlE,OAASkE,KAAK1D,cAAe0D,KAAKtD,aAAesD,KAAKlE,OAASkE,KAAKlD,cAE7K,CAQOkQ,iBAEEnN,SAASI,cAAc,IAAID,KAAKxD,UAAY,IAAMwD,KAAKlD,gBAExDkD,KAAKqC,OAAO,MAAO,OAAQ,GAAI,CAACrC,KAAKxD,UAAYwD,KAAK/D,OAAS+D,KAAKjD,cAAeiD,KAAKxD,UAAYwD,KAAK/D,OAAS+D,KAAKjD,cAAgBiD,KAAKlE,OAASkE,KAAKvB,eAAgBuB,KAAKxD,UAAYwD,KAAKlE,OAASkE,KAAKlD,cAEtN,CAQOmQ,iBAEEpN,SAASI,cAAc,IAAID,KAAKnD,UAAY,IAAMmD,KAAKlD,gBAExDkD,KAAKqC,OAAO,MAAO,OAAQ,GAAI,CAACrC,KAAKnD,UAAYmD,KAAK/D,OAAS+D,KAAKjD,cAAeiD,KAAK3D,cAAe2D,KAAK3D,cAAgB2D,KAAKlE,OAASkE,KAAK1D,cAAe0D,KAAKnD,UAAYmD,KAAKlE,OAASkE,KAAKlD,cAE1M,EC9CJ,MAMA,ECVO,cAAmBgQ,EAYtB/N,YAAY2C,EAAY,KAAMwL,EAAY,MAStC,GAPAlO,QAGAgB,KAAK0B,KAAOA,EACZ1B,KAAKkN,KAAOA,EAGRxL,GAAyB,iBAAX,EAYd,OATI1B,KAAK0B,KADI,QAATwL,EACYrN,SAASC,iBAAiB4B,GAI1B7B,SAASI,cAAcyB,GAIvC1B,KAAKmN,QACEnN,IAEf,CAQQmN,QACV,OAAOnN,KAAK0B,IACb,CAWOoF,MAAMsG,EAAUxK,GAEhB,GAA0B,iBAAf5C,KAAS,KAKhB,OAHAA,KAAK0B,KAAO1B,KAAK0B,KAAK2B,iBAAiB+J,GAAG,IAAMxK,MAGzC5C,KAAKmN,QAGZ,KAAM,uFAEjB,CAUOE,KAAKjM,EAAkB,IAEvB,GAA0B,iBAAfpB,KAAS,KAUhB,OARIoB,EACApB,KAAK0B,KAAKQ,UAAYd,EAGtBpB,KAAK0B,KAAO1B,KAAK0B,KAAKQ,UAInBlC,KAAKmN,QAGZ,KAAM,sFAEjB,CAQOpN,SAEA,GAA0B,iBAAfC,KAAS,KAKhB,OAHAA,KAAK0B,KAAO1B,KAAK0B,KAAK3B,OAGfC,KAAKmN,QAGZ,KAAM,wFAEjB,CAQGG,OAOItN,KAAK6K,cAML7K,KAAKmL,eAMLnL,KAAKqL,iBAMLrL,KAAKgM,oBAMLhM,KAAKiM,kBAMLjM,KAAKmM,gBAMLnM,KAAKwM,eASLxM,KAAK+M,oBAML/M,KAAKgN,iBAMLhN,KAAKiN,gBACT,G","sources":["webpack://Polaris/webpack/universalModuleDefinition","webpack://Polaris/webpack/bootstrap","webpack://Polaris/webpack/runtime/define property getters","webpack://Polaris/webpack/runtime/hasOwnProperty shorthand","webpack://Polaris/./src/ts/modules/Config.ts","webpack://Polaris/./src/ts/modules/Helpers.ts","webpack://Polaris/./src/ts/modules/Animations.ts","webpack://Polaris/./src/ts/modules/Alerts.ts","webpack://Polaris/./src/ts/modules/Modal.ts","webpack://Polaris/./src/ts/modules/Defaults.ts","webpack://Polaris/./src/ts/modules/Blueprints.ts","webpack://Polaris/./src/ts/polaris.ts","webpack://Polaris/./src/ts/modules/Core.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Polaris\"] = factory();\n\telse\n\t\troot[\"Polaris\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * @desc Used for the configuration of Polaris JS library\r\n */\r\nexport class Config {\r\n    public modSep:              string = \"-\";                                   // Modifier Separator\r\n    public chiSep:              string = \"--\";                                  // Child Separator\r\n    public sibSep:              string = \"_\";                                   // Sibling Separator\r\n    public parSep:              string = \"__\";                                  // Parent Separator\r\n\r\n    public nameDoc:             string = \"doc\";                                 // Name key for document component\r\n    public nameLight:           string = \"light\";                               // Name key for light color\r\n    public nameDark:            string = \"dark\";                                // Name key for dark color\r\n    public nameAnimation:       string = \"animation\";                           // Name key for animation component\r\n    public nameAnimated:        string = \"animated\";                            // Name key for animation-animated\r\n    public nameRipple:          string = \"ripple\";                              // Name key for ripple component\r\n    public nameAlert:           string = \"alert\";                               // Name key for alert component\r\n    public nameMessages:        string = \"msg\";                                 // Name key for msg component\r\n    public nameBackdrop:        string = \"backdrop\";                            // Name key for backdrop component\r\n    public namePopup:           string = \"popup\";                               // Name key for popup component\r\n    public nameMenu:            string = \"menu\";                                // Name key for menu component\r\n    public nameModal:           string = \"modal\";                               // Name key for modal component\r\n\r\n    public nameBlueprint:       string = \"blueprint\";                           // Name key for component's blueprint\r\n    public nameContainer:       string = \"container\";                           // Name key for container\r\n    public nameControl:         string = \"control\";                             // Name key for control\r\n    public nameIcon:            string = \"icon\";                                // Name key for icon\r\n    public nameContent:         string = \"content\";                             // Name key for content\r\n    public nameClose:           string = \"close\";                               // Name key for close\r\n    public nameClick:           string = \"click\";                               // Name key for click\r\n    public nameActive:          string = \"active\";                              // Name key for active\r\n    public nameVoid:            string = \"void\";                                // Name key for active\r\n    public nameOpen:            string = \"open\";                                // Name key for open inffix\r\n    public nameHeader:          string = \"header\";                              // Name key for header\r\n    public nameBody:            string = \"body\";                                // Name key for body\r\n    public nameFooter:          string = \"footer\";                              // Name key for footer\r\n    public nameWidth:           string = \"w\";                                   // Name key for css width classes\r\n    public nameHeight:          string = \"h\";                                   // Name key for css height classes\r\n    public nameRadius:          string = \"round\";                               // Name key for border-radius & component roundness\r\n    public namePosition:        string = \"position\";                            // Name key for position classes\r\n    \r\n    public fadeInAnimation:     string = \"fadeIn\";                              // fadeIn animation\r\n    public fadeOutAnimation:    string = \"fadeOut\";                             // fadeOut animation\r\n    public hideYAnimation:      string = \"hideY\";                               // hideY animation\r\n    public rippleAnimation:     string = \"ripple\";                              // ripple animation\r\n    public rippleAutoAnimation: string = \"rippleAuto\";                          // rippleAuto animation\r\n    \r\n    public piAlertCircle:       string = \"pi-alert-circle\";                     // Polaris Icon: alert-circle\r\n    public piAlertTri:          string = \"pi-alert-triangle\";                   // Polaris Icon: alert-triangle\r\n    public piAlertTick:         string = \"pi-alert-tick\";                       // Polaris Icon: alert-tick\r\n    public piClose:             string = \"pi-close\";                            // Polaris Icon: close\r\n    \r\n    public hideTimeout:         number = 8000;                                  // Default hide timeout (in miliseconds)\r\n    public alertPosition:       string = \"bottom\";                              // Alert default position\r\n\r\n    public polarisSizes:        any    = ['xs', 'sm', 'md', 'lg', 'xl'];        // Polaris standard sizes\r\n\r\n    public phoneWidth:          number = 0;                                     // Smartphone min-width\r\n    public tabletWidth:         number = 768;                                   // Tablet min-width\r\n    public desktopWidth:        number = 1280;                                  // Desktop min-width\r\n}","/**\r\n * Import the parent Class\r\n */\r\nimport {Config} from \"./Config\";\r\n\r\n\r\n/**\r\n * @desc Polaris JS helper methods\r\n */\r\nexport class Helpers extends Config {\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Checks a selector for type & existence\r\n     * \r\n     * @param {string | HTMLElement} selector -- The selector name (object)\r\n     * \r\n     * @return {object}\r\n     */\r\n    public check(selector: any = null): any {\r\n        // Default variables\r\n        let result: object = {};\r\n\r\n        // Set the default result response\r\n        result = {\r\n            status:  true,\r\n            message: `Passed!`\r\n        }\r\n\r\n        // Empty or null selector\r\n        if (!selector) {\r\n            result = {\r\n                status:  false,\r\n                message: `The \"selector\" parameter cannot be empty or null.`\r\n            }\r\n        }\r\n\r\n        // String type\r\n        else if (typeof(selector) === \"string\") {\r\n            if (document.querySelectorAll(selector).length == 0) {\r\n                result = {\r\n                    status:  false,\r\n                    message: `The selector \"${selector}\" not exists on the window object!`\r\n                }\r\n            }\r\n        }\r\n\r\n        // Object type\r\n        else if (typeof(selector) === \"object\") {\r\n            if (selector.length == 0) {\r\n                result = {\r\n                    status:  false,\r\n                    message: `The selector object not exists on the window object!`\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return the result\r\n        return result;\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Produces the querySelector object\r\n     * \r\n     * @param {string} selector -- The selector name\r\n     * \r\n     * @return {object}\r\n     */\r\n    public selector(selector: string): any {\r\n        // Check selector\r\n        if (typeof(selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n        else if (this.check(selector)['status']) {\r\n            // Return the result\r\n            return document.querySelector(selector);\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Produces the querySelectorAll object\r\n     * \r\n     * @param {string} selector -- The selector name\r\n     * \r\n     * @return {object}\r\n     */\r\n    public selectors(selector: string): any {\r\n        // Check selector\r\n        if (typeof(selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n        else if (this.check(selector)['status']) {\r\n            // Return the result\r\n            return document.querySelectorAll(selector);\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Checks if an element is visible on the screen\r\n     * \r\n     * @param {string | object} selector  -- The selector name (object)\r\n     * @param {string}          from      -- Visible from (top, bottom, or both)\r\n     * @param {number}          tolerance -- The scroll tolerance\r\n     * \r\n     * @return {boolean}\r\n     */\r\n    public visible(selector: any, from: string = 'both', tolerance: number = 0): boolean {\r\n        let result: boolean = false;\r\n        let rect: any = null;\r\n        let windowHeight = window.innerHeight;\r\n        let viewHeight = Math.max(document.documentElement.clientHeight, windowHeight);\r\n\r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                rect = document.querySelector(selector);\r\n                rect = rect.getBoundingClientRect();\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                rect = selector.getBoundingClientRect();\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Scroll top & bottom\r\n        if (from == 'both') {\r\n            result = rect.bottom >= tolerance && rect.top < viewHeight - tolerance;\r\n        }\r\n\r\n        // Scroll top\r\n        else if (from == 'top') {\r\n            result = rect.top < viewHeight - tolerance;\r\n        }\r\n\r\n        // Scroll bottom\r\n        else if (from == 'bottom') {\r\n            result = rect.bottom >= tolerance;\r\n        }\r\n\r\n        // Return result\r\n        return result;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Prepends an HTML element to a parent element\r\n     * \r\n     * @param {string}          selector  -- The selector name\r\n     * @param {string | object} parent    -- The selector's parent name (object)\r\n     * @param {string}          content   -- The selector's content\r\n     * @param {object}          classList -- The selector's class list ['class-1', 'class-2', ...]\r\n     * @param {string}          id        -- The selector's id name\r\n     * @param {string}          style     -- The selector's inline CSS styles\r\n     * @param {object}          attrs     -- The selector's attributes\r\n     * \r\n     * @return {HTMLElement | boolean}\r\n     */\r\n    public prepend(selector: string, parent: any, content: string, classList: string[] = [], id: string = \"\", style: string = \"\", attrs:any = {}): HTMLElement | boolean {\r\n        let parentNode: any = null;\r\n\r\n        // Check the selector\r\n        if (typeof(selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n\r\n        // Check the parent\r\n        if (this.check(parent)['status']) {\r\n            if (typeof(parent) === \"string\") {\r\n                parentNode = document.querySelector(parent);\r\n    \r\n            } else if (typeof(parent) === \"object\") {\r\n                parentNode = parent;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(parent)['message'];\r\n        }\r\n\r\n        // Create the node\r\n        const node: any = document.createElement(selector);\r\n\r\n        // Add class list\r\n        classList.forEach((cls) => {\r\n            node.classList.add(cls);\r\n        });\r\n\r\n        // Add id\r\n        if (id) {\r\n            node.setAttribute(\"id\", id);\r\n        }\r\n\r\n        // Add style\r\n        if (style) {\r\n            node.style.cssText = style;\r\n        }\r\n\r\n        // Add attributes\r\n        if (attrs) {\r\n            for (let attr in attrs) {\r\n                node.setAttribute(attr, attrs[attr]);\r\n            }\r\n        }\r\n\r\n        // Prepend the node\r\n        node.innerHTML = content;\r\n        parentNode.insertBefore(node, parentNode.firstChild);\r\n\r\n        // Return the node\r\n        return node;\r\n    }\r\n\r\n    \r\n    /**\r\n     * @desc Appends an HTML element to a parent element\r\n     * \r\n     * @param {string}          selector  -- The selector name\r\n     * @param {string | object} parent    -- The selector's parent name (object)\r\n     * @param {string}          content   -- The selector's content\r\n     * @param {object}          classList -- The selector's class list ['class-1', 'class-2', ...]\r\n     * @param {string}          id        -- The selector's id name\r\n     * @param {string}          style     -- The selector's inline CSS styles\r\n     * @param {object}          attrs     -- The selector's attributes\r\n     * \r\n     * @return {HTMLElement | boolean}\r\n     */\r\n    public append(selector: string, parent: any, content: string, classList: string[] = [], id: string = \"\", style: string = \"\", attrs:any = {}): HTMLElement | boolean {\r\n        let parentNode: any = null;\r\n\r\n        // Check the selector\r\n        if (typeof(selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n\r\n        // Check the parent\r\n        if (this.check(parent)['status']) {\r\n            if (typeof(parent) === \"string\") {\r\n                parentNode = document.querySelector(parent);\r\n    \r\n            } else if (typeof(parent) === \"object\") {\r\n                parentNode = parent;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(parent)['message'];\r\n        }\r\n\r\n        // Create the node\r\n        const node: any = document.createElement(selector);\r\n\r\n        // Add class list\r\n        classList.forEach((cls) => {\r\n            node.classList.add(cls);\r\n        });\r\n\r\n        // Add id\r\n        if (id) {\r\n            node.setAttribute(\"id\", id);\r\n        }\r\n\r\n        // Add style\r\n        if (style) {\r\n            node.style.cssText = style;\r\n        }\r\n\r\n        // Add attributes\r\n        if (attrs) {\r\n            for (let attr in attrs) {\r\n                node.setAttribute(attr, attrs[attr]);\r\n            }\r\n        }\r\n        \r\n        // Append the node\r\n        node.innerHTML = content;\r\n        parentNode.appendChild(node);\r\n\r\n        // Return the node\r\n        return node;\r\n    }\r\n\r\n    \r\n    /**\r\n     * @desc Removes an HTML element from the DOM\r\n     * \r\n     * @param {string | object} selector -- The selector name (object)\r\n     * \r\n     * @return {void | boolean}\r\n     */\r\n    public remove(selector: any): void | boolean {\r\n        let node: any = null;\r\n        \r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Remove the node\r\n        node.remove();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc For writing the whole document\r\n     * \r\n     * @param {string} content -- The document content\r\n     * \r\n     * @return {void}\r\n     */\r\n    public write(content: string = \"\"): void {\r\n        javascript:\r\n            document.open('text/html');\r\n            document.write(content);\r\n            document.close();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Loops a function for a couple of times\r\n     * \r\n     * @param {function} fn    -- The function that needed to be looped\r\n     * @param {number}   delay -- The time delay for each iteration\r\n     * @param {number}   count -- The loop count\r\n     * \r\n     * @return {void}\r\n     */\r\n    public loop(fn: any, delay: number = 1000, count: number = Infinity): void {\r\n        let i: number = 0;\r\n        let interval = setInterval(() => {\r\n            // Exit the loop\r\n            if (i == count || count <= 0) {\r\n                clearInterval(interval);\r\n                return false;\r\n            }\r\n\r\n            // Invoke the function\r\n            fn();\r\n\r\n            i++;\r\n        }, delay);\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Excecutes a function after document fully loaded\r\n     * \r\n     * @param {function} fn -- The callback function\r\n     * \r\n     * @return {void}\r\n     */\r\n    public loaded(fn: any): void {\r\n        return document.addEventListener('DOMContentLoaded', () => {\r\n            fn();\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc For escaping Regular Expression search characters\r\n     * \r\n     * @param {string} str -- The string to format\r\n     * \r\n     * @return {string}\r\n     */\r\n    public escape(str: string): string {\r\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');      // $& means the whole matched string\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc For replacing character(s) in a string\r\n     * \r\n     * @param {string} str     -- The string to format\r\n     * @param {string} find    -- The character(s) to find\r\n     * @param {string} replace -- The character(s) to replace\r\n     * \r\n     * @return {string}\r\n     */\r\n    public replace(str: string, find: string, replace: string):string  {\r\n        return str.replace(new RegExp(this.escape(find), 'g'), replace);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * @desc For removeing character(s) in a string before some character(s)\r\n     * \r\n     * @param {string}  str    -- The string to format\r\n     * @param {string}  find   -- The character(s) to find\r\n     * @param {boolean} strict -- Remove the character itself?\r\n     * \r\n     * @return {string | undefined}\r\n     */\r\n    public removeBefore = (str: string, find: string, strict:boolean = false):string | undefined => {\r\n        if (strict) {\r\n            return str.split(find).pop();\r\n        }\r\n        else {\r\n            return find + str.split(find).pop();\r\n        }\r\n    };\r\n    \r\n    \r\n    /**\r\n     * @desc For removeing character(s) in a string after some character(s)\r\n     * \r\n     * @param {string}  str    -- The string to format\r\n     * @param {string}  find   -- The character(s) to find\r\n     * @param {boolean} strict -- Remove the character itself?\r\n     * \r\n     * @return {string}\r\n     */\r\n    public removeAfter = (str:string, find:string, strict:boolean = false):string => {\r\n        if (strict) {\r\n            return str.split(find)[0];\r\n        }\r\n        else {\r\n            return str.split(find)[0] + find;\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * @desc For redirecting http URLs\r\n     * \r\n     * @param {string} url -- The URL to redirect\r\n     * \r\n     * @return {void}\r\n     */\r\n    public redirect(url: string = \"/\"): void {\r\n        window.location.href = url;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Finds page relative href\r\n     * \r\n     * @return {string}\r\n     */\r\n    public href(): string {\r\n        return this.replace(window.location.href, window.location.origin, \"\");\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Calculates the scrollbar width\r\n     * \r\n     * @return {number}\r\n     */\r\n    public scrollWidth(): number {\r\n    \treturn window.innerWidth - document.documentElement.clientWidth;\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Checks a file for existence\r\n     * \r\n     * @param {string} file -- The absolute file path\r\n     * \r\n     * @return {boolean}\r\n     */\r\n    public exist(file:string):boolean {\r\n        // Create a new XML HTTP Request\r\n        let xhr:any = new XMLHttpRequest();\r\n\r\n        // Request the file\r\n        xhr.open('HEAD', file, false);\r\n        xhr.send();\r\n\r\n        // File not found\r\n        if (xhr.status == \"404\") {\r\n            return false;\r\n        }\r\n        // File found\r\n        else {\r\n            return true; \r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Reads and returns a file content as a promise in JSON format\r\n     * \r\n     * @param {string} file -- The absolute file path\r\n     * \r\n     * @return {object|boolean}\r\n     */\r\n    public json(file:string, strict:boolean=false):object|boolean {\r\n        // Check strict mod\r\n        if (strict) {\r\n            // Check file existence\r\n            if (!this.exist(file)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Create a new promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            let final:any = null;\r\n            \r\n            // Fetch file\r\n            fetch(file)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                final = result;\r\n            })\r\n            .then(() => {\r\n                // Resolve the promise\r\n                resolve(final);\r\n            });\r\n        });\r\n\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Reads and returns a file content as a promise in plain text\r\n     * \r\n     * @param {string} file -- The absolute file path\r\n     * \r\n     * @return {object|boolean}\r\n     */\r\n    public text(file:string, strict:boolean=false):object|boolean {\r\n        // Check strict mod\r\n        if (strict) {\r\n            // Check file existence\r\n            if (!this.exist(file)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Create a new promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            let final:any = null;\r\n            \r\n            // Fetch file\r\n            fetch(file)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                final = result;\r\n            })\r\n            .then(() => {\r\n                // Resolve the promise\r\n                resolve(final);\r\n            });\r\n        });\r\n\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Creates a promise to copy a text to clipboard and returns the result\r\n     * \r\n     * @param {string} text -- The text to copy\r\n     * \r\n     * @return {void|boolean}\r\n     */\r\n    public copy(text:string):void|boolean {\r\n        // Create a new promise\r\n        const promise:any = new Promise((resolve, reject) => {\r\n            let result:any = null;\r\n            navigator.clipboard.writeText(text)\r\n            .then(() => result = true, err => {\r\n                console.error('Copy Error: ', err);\r\n                result = false;\r\n            })\r\n            .then(() => {\r\n                // Resolve the promise\r\n                resolve(result);\r\n            });\r\n        });\r\n\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Adds a class to a selector\r\n     * \r\n     * @param {string|object} selector -- The selector name (object)\r\n     * @param {string} cls             -- The class name\r\n     * \r\n     * @return {void}\r\n     */\r\n    public addClass(selector:any, cls:string):void {\r\n        let node: any = null;\r\n        \r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Add the class\r\n        if (!node.classList.contains(cls)) {\r\n            node.classList.add(cls);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Removes a class to a selector\r\n     * \r\n     * @param {string | object} selector -- The selector name (object)\r\n     * @param {string} cls               -- The class name\r\n     * \r\n     * @return {void}\r\n     */\r\n    public removeClass(selector:any, cls:string):void {\r\n        let node: any = null;\r\n        \r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Remove the class\r\n        if (node.classList.contains(cls)) {\r\n            node.classList.remove(cls);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Toggles an old class with a new class for a selector\r\n     * \r\n     * @param {string|object} selector -- The selector name (object)\r\n     * @param {string} clsOld          -- The old class name\r\n     * @param {string} clsNew          -- The new class name\r\n     * \r\n     * @return {void}\r\n     */\r\n    public toggleClass(selector:any, clsOld:string, clsNew:string):void {\r\n        let node: any = null;\r\n        \r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Remove the old class\r\n        if (node.classList.contains(clsOld)) {\r\n            node.classList.remove(clsOld);\r\n        }\r\n\r\n        // Add the new class\r\n        if (!node.classList.contains(clsNew)) {\r\n            node.classList.add(clsNew);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Adds a class list(array) to a selector\r\n     * \r\n     * @param {string|object} selector -- The selector name (object)\r\n     * @param {string[]} classList     -- The class list (array)\r\n     * \r\n     * @return {void}\r\n     */\r\n    public addClasses(selector:any, classList: string[]):void {\r\n        let node: any = null;\r\n        \r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Loop classes\r\n        classList.forEach((cls) => {\r\n            // Add the class\r\n            if (!node.classList.contains(cls)) {\r\n                node.classList.add(cls);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Converts and returns a string into uppercase, taking into account the current locale\r\n     * \r\n     * @param {string} text -- The text to excecute\r\n     * \r\n     * @return {string}\r\n     */\r\n    public upper(text:string):string {\r\n        return text.toLocaleUpperCase();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Converts and returns a string into lowercase, taking into account the current locale\r\n     * \r\n     * @param {string} text -- The text to excecute\r\n     * \r\n     * @return {string}\r\n     */\r\n    public lower(text:string):string {\r\n        return text.toLocaleLowerCase();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Returns the computed style for an element\r\n     * \r\n     * @param {string | HTMLElement} selector -- The node seclector\r\n     * \r\n     * @return {string}\r\n     */\r\n    public getStyle(selector: any, property:string) {\r\n        let node, result;\r\n\r\n        // String type\r\n        if (typeof(selector) == \"string\") {\r\n            node = document.querySelectorAll(selector);\r\n        }\r\n        else {\r\n            node = selector;\r\n        }\r\n\r\n        // Property exists\r\n        const view = (node.ownerDocument || document).defaultView;\r\n        if (view && view.getComputedStyle) {\r\n            result = view.getComputedStyle(node, null).getPropertyValue(property); \r\n        }\r\n        // Property not exists\r\n        else {\r\n            result == undefined;\r\n        }\r\n\r\n        // Return result\r\n        return result;\r\n    }\r\n    \r\n}\r\n","/**\r\n * Import the parent Class\r\n */ \r\nimport {Helpers} from \"./Helpers\";\r\n\r\n\r\n/**\r\n * @desc Used for setting & handling animations\r\n */\r\nexport class Animations extends Helpers {\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Sets and returns a new animation Promise\r\n     *\r\n     * @param {any}     selector  -- The selector name (object)\r\n     * @param {string}  animation -- The animation name\r\n     * @param {boolean} clear     -- For clearing the animation after it has been ended\r\n     * \r\n     * @return {any}\r\n     */\r\n    public animation(selector: any, animation: string = \"\", clear: boolean = false): any {\r\n        let node: any = null;\r\n        \r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Check animation\r\n        if (animation == \"\") {\r\n            // Unset the animation\r\n            // node.removeAttribute('data-animation');\r\n            node.style.removeProperty('animation-name');\r\n            \r\n            // Exit the method\r\n            return false;\r\n        }\r\n\r\n        // // Check current animation\r\n        // if (this.getStyle(selector, 'animation-name') == animation) {\r\n        //     // TODO\r\n        // }\r\n\r\n        // // Wait for all animations to be finished\r\n        // Promise.all(\r\n        //     node.getAnimations({ subtree: false })\r\n        //     .map((animation:any) => animation.finished)\r\n        // ).then(() => {\r\n        //     // TODO\r\n        // });\r\n\r\n        // Animation promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            // Check datasets and set variables\r\n            this.datasets(node);\r\n\r\n            // Set the new animation\r\n            // node.setAttribute(\"data-animation\", animation);\r\n            node.style.setProperty('animation-name', animation);\r\n\r\n            // Animation resolve callback\r\n            function animationEnd(event: Event) {\r\n                event.stopPropagation();\r\n                \r\n                // Check animation clearance\r\n                if (clear) {\r\n                    // node.removeAttribute('data-animation');\r\n                    node.style.removeProperty('animation-name');\r\n                }\r\n\r\n                // Promise on resolve\r\n                resolve('Animation ended!');\r\n        \r\n                // Promise on reject\r\n                reject('Animation crashed!');\r\n            }\r\n            \r\n            // Animation end listener\r\n            node.addEventListener('animationend', animationEnd, {once: true});\r\n        });\r\n\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Checks animation datasets and sets relevant variables\r\n     * \r\n     * @param {object} selector -- The selector object\r\n     * \r\n     * @return {void}\r\n     */\r\n    public datasets(selector: any): void {\r\n        // data-animation\r\n        if (selector.dataset.animation) {\r\n            selector.style.setProperty('animation-name', selector.dataset.animation);\r\n        }\r\n\r\n        // data-duration\r\n        if (selector.dataset.duration) {\r\n            selector.style.setProperty('--animation-duration', selector.dataset.duration);\r\n        }\r\n\r\n        // data-delay\r\n        if (selector.dataset.delay) {\r\n            selector.style.setProperty('--animation-delay', selector.dataset.delay);\r\n        }\r\n\r\n        // data-count\r\n        if (selector.dataset.count) {\r\n            selector.style.setProperty('--animation-count', selector.dataset.count);\r\n        }\r\n\r\n        // data-function\r\n        if (selector.dataset.function) {\r\n            selector.style.setProperty('--animation-function', selector.dataset.function);\r\n        }\r\n\r\n        // data-state\r\n        if (selector.dataset.state) {\r\n            selector.style.setProperty('--animation-state', selector.dataset.state);\r\n        }\r\n\r\n        // data-position\r\n        if (selector.dataset.position) {\r\n            selector.style.setProperty('--animation-position', selector.dataset.position);\r\n        }\r\n\r\n        // data-scale\r\n        if (selector.dataset.scale) {\r\n            selector.style.setProperty('--animation-scale', selector.dataset.scale);\r\n        }\r\n\r\n        // data-perspective\r\n        if (selector.dataset.perspective) {\r\n            selector.style.setProperty('--animation-perspective', selector.dataset.perspective);\r\n        }\r\n\r\n        // data-degree\r\n        if (selector.dataset.degree) {\r\n            selector.style.setProperty('--animation-degree', selector.dataset.degree);\r\n        }\r\n\r\n        // data-height\r\n        if (selector.dataset.height) {\r\n            selector.style.setProperty('--animation-height', selector.dataset.height);\r\n        }\r\n\r\n        // data-width\r\n        if (selector.dataset.width) {\r\n            selector.style.setProperty('--animation-width', selector.dataset.width);\r\n        }\r\n        \r\n        // data-brightness\r\n        if (selector.dataset.brightness) {\r\n            selector.style.setProperty('--animation-brightness', selector.dataset.brightness);\r\n        }\r\n\r\n        // data-dimension\r\n        if (selector.dataset.dimension) {\r\n            selector.style.setProperty('--animation-dimension', selector.dataset.dimension);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Makes selectors animated\r\n     * \r\n     * @param {string | object} selector -- The selector name (object)\r\n     * @param {string}          mod      -- The scroll mod\r\n     * \r\n     * @return {void}\r\n     */\r\n    public animated(selector: string | object, mod: string = 'bottom'): void | boolean {\r\n        let nodes: any = null;\r\n        \r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                nodes = document.querySelectorAll(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                nodes = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        nodes.forEach((node: any) => {\r\n            let tolerance = node.dataset.tolerance;\r\n            let animationEnter = node.dataset.enter;\r\n            let animationExit = node.dataset.exit;\r\n\r\n            // Check data-tolerance\r\n            if (!tolerance) {\r\n                tolerance = 0;\r\n            }\r\n\r\n            // Check data-enter\r\n            if (!animationEnter) {\r\n                animationEnter = 'fadeIn';\r\n            }\r\n\r\n            // Check data-exit\r\n            if (!animationExit) {\r\n                animationExit = 'fadeOut';\r\n            }\r\n\r\n            // Check element visibility\r\n            if (this.visible(node, mod, tolerance)) {\r\n                // Animation enter\r\n                this.animation(node, animationEnter);\r\n            \r\n            } else {\r\n                // Animation exit\r\n                this.animation(node, animationExit);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Loops an animation\r\n     * \r\n     * @param {string | object} selector -- The selector name (object)\r\n     * @param {number}          duration -- The loop duration (in miliseconds)\r\n     * @param {number}          count    -- The loop count\r\n     * \r\n     * @return {void | boolean}\r\n     */\r\n    public animating(selector: string | object, duration: number = 1000, count: number = Infinity): void | boolean {\r\n        let node: any = null;\r\n        \r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n\r\n        // Check element visibility\r\n        if (this.visible(node, \"both\", 0)) {\r\n            this.loop(() => {\r\n                let animation = node.getAttribute('data-animation');\r\n    \r\n                // node.removeAttribute('data-animation');\r\n                node.style.removeProperty('animation-name');\r\n\r\n                node.offsetTop;\r\n\r\n                // node.setAttribute('data-animation', animation);\r\n                node.style.setProperty('animation-name', animation);\r\n            }, duration, count - 1);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc For navigation active class on page scroll\r\n     * \r\n     * @param {string | object} selector  -- The selector name (object)\r\n     * @param {string | object} navigator -- The navigator selector name (object)\r\n     * @param {string}          active    -- The navigator active class\r\n     * @param {number}          tolerance -- The scroll tolerance\r\n     * \r\n     * @return {void | boolean}\r\n     */\r\n    public navigated(selector: string | object, navigator: string | object, active: string = 'active', tolerance:number = 0): void | boolean {\r\n        let selectors: any = null;\r\n        let navigators: any = null;\r\n        \r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof(selector) === \"string\") {\r\n                selectors = document.querySelectorAll(selector);\r\n    \r\n            } else if (typeof(selector) === \"object\") {\r\n                selectors = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        \r\n        // Check the navigators\r\n        if (this.check(navigator)['status']) {\r\n            if (typeof(navigator) === \"string\") {\r\n                navigators = document.querySelectorAll(navigator);\r\n    \r\n            } else if (typeof(navigator) === \"object\") {\r\n                navigators = navigator;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(navigator)['message'];\r\n        }\r\n\r\n        // Navigation links\r\n        selectors.forEach((node: any) => {\r\n            let top = window.scrollY;\r\n            let height = node.offsetHeight;\r\n            let offset = node.offsetTop - tolerance;\r\n            let id = node.getAttribute(\"id\");\r\n\r\n            // Set the active class\r\n            if (top >= offset && top < offset + height) {\r\n                navigators.forEach((link: any) => {\r\n                    link.classList.remove(active);\r\n                    document.querySelector(`${navigator}[href*=${id}`)!.classList.add(active);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n","/**\r\n * Import the parent Class\r\n */\r\nimport {Animations} from \"./Animations\";\r\n\r\n\r\n/**\r\n * @desc Used for setting alerts\r\n */ \r\nexport class Alerts extends Animations {\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n\r\n\r\n    // Set Alert\r\n    /**\r\n     * @desc Sets an alert to alert__container#alert-blueprint\r\n     * \r\n     * @param {string} text     -- Alert text\r\n     * @param {string} enter    -- Alert animation enter\r\n     * @param {string} exit     -- Alert animation exit\r\n     * @param {string} status   -- Alert status: notice | warning | success\r\n     * @param {string} color    -- Alert color:  light | dark\r\n     * @param {boolean} close   -- Closable alert: true | false\r\n     * @param {number} duration -- Alert animation duration: number in miliseconds\r\n     * @param {number} delay    -- Alert animation delay: number in miliseconds\r\n     * \r\n     * @return {void}\r\n     */\r\n    public alert(text: string, enter: string= \"fadeIn\", exit: string = \"fadeOut\", status: string = \"\", color: string = \"\", close: boolean = true, duration: number = 500, delay: number = 250): void {      \r\n        // Set the status code\r\n        let statusCode:  string = \"\";\r\n        let statusClass: string = \"\";\r\n\r\n        if (status) statusClass = ` ${this.nameAlert + this.modSep + this.nameIcon}`;\r\n        \r\n        if (status === \"notice\") {\r\n            statusCode = `<div class=\"${this.nameAlert + this.chiSep + this.nameIcon} ${this.piAlertCircle}\"></div>`;\r\n        }\r\n        else if (status === \"warning\") {\r\n            statusCode = `<div class=\"${this.nameAlert + this.chiSep + this.nameIcon} ${this.piAlertTri}\"></div>`;\r\n        }\r\n        else if (status === \"success\") {\r\n            statusCode = `<div class=\"${this.nameAlert + this.chiSep + this.nameIcon} ${this.piAlertTick}\"></div>`;\r\n        }\r\n\r\n        // Set the color class\r\n        let colorClass: string = \"\";\r\n        if (color === \"light\") {\r\n            colorClass = ` ${this.nameAlert + this.modSep + color}`;\r\n        }\r\n\r\n        // Check the closable\r\n        let closeCode: string = \"\";\r\n        let closeClass: string = \"\";\r\n        if (close) {\r\n            closeCode = `<div class=\"${this.nameAlert + this.chiSep + this.nameClose} ${this.piClose}\"></div>`;\r\n            closeClass = ` ${this.nameAlert + this.modSep + this.nameClose}`;\r\n        }\r\n        \r\n        // Produce the alert content\r\n        let content  = `<div class=\"${this.nameAlert + colorClass + statusClass + closeClass} ${this.nameAnimation}\" style=\"animation-name:${enter}; --animation-duration: ${duration}ms;\">`;\r\n            content += statusCode;\r\n            content += `<div class=\"${this.nameAlert + this.chiSep + this.nameContent}\">`;\r\n            content += text;\r\n            content += '</div>';\r\n            content += closeCode;\r\n            content += '</div>';\r\n\r\n        // Create the parent\r\n        const parent: any = document.querySelector(`#${this.nameAlert + '-' + this.nameBlueprint}`);\r\n\r\n        // Create the node\r\n        const element: any = document.createElement('div');\r\n        \r\n        // Modify the node\r\n        element.classList.add(this.nameAlert + this.parSep + this.nameControl, this.nameAnimation);\r\n        element.style.cssText = `--animation-duration: ${duration}ms; --animation-height: 4.5rem;`;\r\n        element.innerHTML = content;\r\n\r\n        // Append the node to the parent\r\n        parent.appendChild(element);\r\n\r\n        // Find the child node\r\n        const child = element.querySelector(`.${this.nameAlert}`);\r\n\r\n        // Set animation exit timeout\r\n        let timeout = setTimeout(() => {\r\n            this.animation(child, exit);\r\n            timeout = setTimeout(() => {\r\n                this.animation(element, this.hideYAnimation).then(() => {\r\n                    element.remove();\r\n                });\r\n            }, delay);\r\n        }, this.hideTimeout);\r\n\r\n        // Set animation exit on click\r\n        if(element.querySelector(`.${this.nameAlert + this.chiSep + this.nameClose}`)) {\r\n            element.querySelector(`.${this.nameAlert + this.chiSep + this.nameClose}`).onclick = () => {\r\n                clearTimeout(timeout);\r\n                this.animation(child, exit);\r\n                timeout = setTimeout(() => {\r\n                    this.animation(element, this.hideYAnimation).then(() => {\r\n                        element.remove();\r\n                    });\r\n                }, delay);\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Import the parent Class\r\n */\r\nimport {Alerts} from \"./Alerts\";\r\n\r\n\r\n/**\r\n * @desc Used for setting modal\r\n */ \r\nexport class Modal extends Alerts {\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Sets modal to modal__container#modal-blueprint\r\n     * \r\n     * @param {string} title     -- Modal title\r\n     * @param {string} body      -- Modal body\r\n     * @param {string} footer    -- Modal footer\r\n     * @param {string} size      -- Modal size (xs, sm, md, lg, xl)\r\n     * @param {string} enter     -- Modal animation enter\r\n     * @param {string} exit      -- Modal animation exit\r\n     * @param {string} color     -- Modal color:  light | dark\r\n     * @param {boolean} close    -- Closable modal: true | false\r\n     * @param {boolean} backdrop -- Has backdrop: true | false\r\n     * @param {number} duration  -- Modal animation duration: number in miliseconds\r\n     * \r\n     * @return {void}\r\n     */\r\n    public modal(title: string, body: string, footer: string = \"\", size:string = \"xs\", enter: string= \"fadeIn\", exit: string = \"fadeOut\", color: string = \"\", close: boolean = true, backdrop: boolean = true, duration: number = 500): void {\r\n\r\n        // Check size\r\n        let sizeCLass: string = \"\";\r\n        if (this.polarisSizes.includes(size)) {\r\n            sizeCLass = ` ${this.nameModal + this.modSep + size}`;\r\n        }\r\n        else if (size) {\r\n            sizeCLass = ` ${size}`;\r\n        } else {\r\n            sizeCLass = ` ${this.nameWidth}-100`;\r\n        }\r\n\r\n        // Set the color class\r\n        let colorClass: string = \"\";\r\n        if (color === \"light\") {\r\n            colorClass = ` ${this.nameModal + this.modSep + color}`;\r\n        }\r\n\r\n        // Check the closable\r\n        let closeCode: string = \"\";\r\n        if (close) {\r\n            closeCode = `<div class=\"${this.nameModal + this.chiSep + this.nameClose} ${this.piClose}\"></div>`;\r\n        }\r\n\r\n        // Check footer\r\n        let footerCode: string = \"\";\r\n        if (footer) {\r\n            footerCode = `<footer class=\"${this.nameModal + this.chiSep + this.nameFooter}\">${footer}</main>`;\r\n        }\r\n        \r\n        // Produce the modal content\r\n        let content  = `<div class=\"${this.nameModal + sizeCLass + colorClass} ${this.nameAnimation} scroll scroll-sm scroll-radius-sm\" style=\"animation-name:${enter}; --animation-duration: ${duration}ms;\">`;\r\n            content += closeCode;\r\n            content += `<header class=\"${this.nameModal + this.chiSep + this.nameHeader}\">`;\r\n            content += `<h1>${title}</h1>`;\r\n            content += '</header>';\r\n            content += `<main class=\"${this.nameModal + this.chiSep + this.nameBody}\">`;\r\n            content += body;\r\n            content += '</main>';\r\n            content += footerCode;\r\n            content += '</div>';\r\n\r\n        // Find the parent\r\n        const parent: any = document.querySelector(`#${this.nameModal + '-' + this.nameBlueprint}`);\r\n\r\n        // Find the backdrop\r\n        const bdrop: any = document.querySelector(`.${this.nameBackdrop}`);\r\n\r\n        // Create the node\r\n        const element: any = document.createElement('div');\r\n\r\n        // Append the node to the parent\r\n        parent.appendChild(element);\r\n        \r\n        // Modify the node\r\n        element.outerHTML = content;\r\n\r\n        // Find the child node\r\n        const child = parent.querySelector(`.${this.nameModal}`);\r\n\r\n        // Hide the scrollbar\r\n        let bodyElement: any = document.querySelector('body');\r\n\t\tbodyElement.style.paddingRight = this.scrollWidth() + \"px\";\r\n\t\tbodyElement.style.overflow = \"hidden\";\r\n\r\n        // Show the backdrop\r\n        if (backdrop) {\r\n            this.animation(bdrop, this.fadeInAnimation);\r\n        }\r\n\r\n        // Show the parent\r\n        this.animation(parent, this.fadeInAnimation);\r\n\r\n        // Set animation exit on click\r\n        if(child.querySelector(`.${this.nameModal + this.chiSep + this.nameClose}`)) {\r\n            child.querySelector(`.${this.nameModal + this.chiSep + this.nameClose}`).onclick = () => {\r\n                // Hide the backdrop\r\n                if (backdrop) {\r\n                    this.animation(bdrop, this.fadeOutAnimation);\r\n                }\r\n\r\n                // Show the scrollbar\r\n                setTimeout(() => {\r\n                    bodyElement.style.paddingRight = \"\";\r\n                    bodyElement.style.overflow = \"\";\r\n                }, duration / 2);\r\n\r\n                // Hide the child\r\n                this.animation(child, exit).then(() => {\r\n                    // Remove the child\r\n                    child.remove();\r\n                    \r\n                    // Hide the parent\r\n                    this.animation(parent, this.fadeOutAnimation);\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Sets custom modal to custom modal__container\r\n     * \r\n     * @param {string|object} parent -- Modal container selector or object\r\n     * @param {string} enter         -- Modal animation enter\r\n     * @param {string} exit          -- Modal animation exit\r\n     * @param {boolean} backdrop     -- Has backdrop: true | false\r\n     * @param {number} duration      -- Modal animation duration: number in miliseconds\r\n     * \r\n     * @return {void}\r\n     */\r\n    public setModal(parent:any, enter: string= \"fadeIn\", exit: string = \"fadeOut\", backdrop: boolean = true, duration: number = 500): void {\r\n        // Find the parent\r\n        let parentNode: any;\r\n        if      (typeof(parent) === \"string\") parentNode = document.querySelector(parent);\r\n        else if (typeof(parent) === \"object\") parentNode = parent;\r\n\r\n        // Find the modal\r\n        const modal: any = parentNode.querySelector(`.${this.nameModal}`);\r\n\r\n        // Find the backdrop\r\n        const bdrop: any = document.querySelector(`.${this.nameBackdrop}`);\r\n\r\n        // Hide the scrollbar\r\n        let bodyElement: any = document.querySelector('body');\r\n\t\tbodyElement.style.paddingRight = this.scrollWidth() + \"px\";\r\n\t\tbodyElement.style.overflow = \"hidden\";\r\n\r\n        // Show the backdrop\r\n        if (backdrop) {\r\n            this.animation(bdrop, this.fadeInAnimation);\r\n        }\r\n\r\n        // Show the parent\r\n        this.animation(parentNode, this.fadeInAnimation);\r\n\r\n        // Show the modal\r\n        this.animation(modal, enter);\r\n\r\n        // Set animation exit on click\r\n        if(modal.querySelector(`.${this.nameModal + this.chiSep + this.nameClose}`)) {\r\n            modal.querySelector(`.${this.nameModal + this.chiSep + this.nameClose}`).onclick = () => {\r\n                // Hide the backdrop\r\n                if (backdrop) {\r\n                    this.animation(bdrop, this.fadeOutAnimation);\r\n                }\r\n\r\n                // Show the scrollbar\r\n                setTimeout(() => {\r\n                    bodyElement.style.paddingRight = \"\";\r\n                    bodyElement.style.overflow = \"\";\r\n                }, duration / 2);\r\n\r\n                // Hide the modal\r\n                this.animation(modal, exit).then(() => {\r\n                    // Hide the parent\r\n                    this.animation(parentNode, this.fadeOutAnimation);\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Import the parent Class\r\n */ \r\nimport {Modal} from \"./Modal\";\r\n\r\n\r\n/**\r\n * @desc Used for handling components default behaviors\r\n */ \r\nexport class Defaults extends Modal {\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Document default classes\r\n     * \r\n     * @return {void}\r\n     */\r\n    public docDefaults(): void {\r\n        let doc:any = document.querySelector('body');\r\n\r\n        // Check the document class \r\n        if (!doc.classList.contains(`${this.nameDoc}`)) {\r\n            doc.classList.add(`${this.nameDoc}`);\r\n        }\r\n\r\n        // Check the document color\r\n        if (!doc.classList.contains(`${this.nameDoc + this.modSep + this.nameLight}`) && \r\n            !doc.classList.contains(`${this.nameDoc + this.modSep + this.nameDark}`)) {\r\n            // Color scheme\r\n            let scheme: string;\r\n\r\n            // Dark mode\r\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n                scheme = this.nameDark;\r\n            }\r\n            // Light mode\r\n            else {\r\n                scheme = this.nameLight;\r\n            }\r\n\r\n            // Set color scheme\r\n            doc.classList.add(`${this.nameDoc + this.modSep + scheme}`);\r\n            \r\n            // Watch for changes\r\n            window.matchMedia('(prefers-color-scheme: dark)').onchange = (event => {\r\n                // Remove old scheme\r\n                this.removeClass(`.${this.nameDoc}`, `${this.nameDoc + this.modSep + scheme}`);\r\n\r\n                // Find new scheme\r\n                scheme = event.matches ? this.nameDark : this.nameLight;\r\n\r\n                // Set new color scheme\r\n                doc.classList.add(`${this.nameDoc + this.modSep + scheme}`);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles void links\r\n     * \r\n     * @return {void}\r\n     */\r\n    public linkDefaults(): void {\r\n        if (document.querySelectorAll(`.${this.nameVoid}`).length) {\r\n            document.querySelectorAll(`.${this.nameVoid}`).forEach((elem: any) => {\r\n                // Check element href\r\n                if (elem.getAttribute('href') === \"#\") {\r\n                    elem.setAttribute('href', 'javascript:void(0)');\r\n                }\r\n\r\n                // Prevent default behavior\r\n                // elem.onclick = () => {\r\n                //     return false;\r\n                // };\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Sets ripple animations if any available\r\n     * \r\n     * @return {void}\r\n     */\r\n    public rippleDefaults(): void {\r\n        /**\r\n         *  Ripple animations\r\n         */\r\n        if (document.querySelectorAll(`.${this.nameRipple}`).length) {\r\n            // ripple\r\n            document.querySelectorAll(`.${this.nameRipple}[data-animation=${this.rippleAnimation}]`).forEach((elem: any) => {\r\n                elem.onclick = (event:any) => {\r\n                    let x = event.clientX, y = event.clientY;\r\n                    const REC = elem.getBoundingClientRect(), DIM = Math.sqrt(Math.pow(REC.width, 2) + Math.pow(REC.height, 2));\r\n                    \r\n                    // Unset the previous ripple animation\r\n                    elem.removeAttribute('data-animation');\r\n\r\n                    elem.offsetTop;\r\n                    \r\n                    // Set the new ripple animation\r\n                    elem.setAttribute('data-animation', this.rippleAnimation);\r\n                    \r\n                    elem.style.setProperty('--animation-dimension', DIM + 'px');\r\n                    elem.style.setProperty('--animation-left', x - REC.left + 'px');\r\n                    elem.style.setProperty('--animation-top', y - REC.top + 'px');\r\n                    \r\n                    // Set datasets and variables\r\n                    this.datasets(elem);\r\n                };\r\n            });\r\n            \r\n            // rippleAuto\r\n            document.querySelectorAll(`.${this.nameRipple}[data-animation=${this.rippleAutoAnimation}]`).forEach((elem: any) => {\r\n                // Set datasets and variables\r\n                this.datasets(elem);\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Handles animation datasets if any available\r\n     * \r\n     * @return {void}\r\n     */\r\n    public animationDefaults(): void {\r\n        if (document.querySelectorAll(`.${this.nameAnimation}`).length) {\r\n            document.querySelectorAll(`.${this.nameAnimation}`).forEach((elem: any) => {\r\n                // Set CSS properties and variables\r\n                this.datasets(elem);\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Handles closable messages\r\n     * \r\n     * @return {void}\r\n     */\r\n    public messageDefaults(): void {\r\n        if (document.querySelectorAll(`.${this.nameMessages + this.chiSep + this.nameClose}`).length) {\r\n            document.querySelectorAll(`.${this.nameMessages + this.chiSep + this.nameClose}`).forEach((elem: any) => {\r\n                elem.onclick = () => {\r\n                    let parent = elem.parentElement.parentElement;\r\n\r\n                    this.animation(parent, this.hideYAnimation).then(() => {\r\n                        parent.remove();\r\n                    });\r\n                };\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Handles clickable popups\r\n     * \r\n     * @return {void}\r\n     */\r\n    public popupDefaults(): void {\r\n        if (document.querySelectorAll(`.${this.namePopup + this.parSep + this.nameControl}`).length) {\r\n            document.querySelectorAll(`.${this.namePopup + this.parSep + this.nameControl}`).forEach((elem: any) => {\r\n                // Check clickable\r\n                if (elem.querySelector(`.${this.namePopup + this.modSep + this.nameClick}`)) {\r\n                    elem.onclick = (i:any) => {\r\n                        // Popup component\r\n                        let popup = elem.querySelector(`.${this.namePopup + this.modSep + this.nameClick}`);\r\n    \r\n                        // Ignore the click for component and its children(:not(.popup--close))\r\n                        let ignoreClick = false\r\n                        elem.querySelectorAll(`.${this.namePopup} *:not(.${this.namePopup + this.chiSep + this.nameClose})`).forEach((j: any) => {\r\n                            if (i.target == j) {\r\n                                ignoreClick = true;\r\n                            }\r\n                        });\r\n    \r\n                        // Check ignore click\r\n                        if (ignoreClick || i.target == popup) return;\r\n    \r\n                        // Remove open class (hide popup)\r\n                        if (elem.querySelector(`.${this.namePopup + this.modSep + this.nameOpen}`)) {\r\n                            popup.classList.remove(`${this.namePopup + this.modSep + this.nameOpen}`);\r\n                        }\r\n                        // Add open class (show popup)\r\n                        else {\r\n                            popup.classList.add(`${this.namePopup + this.modSep + this.nameOpen}`);\r\n                        }\r\n\r\n                        // Prevent default behavior\r\n                        return false;\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Handles clickable and hoverable animated menu\r\n     * \r\n     * @return {void}\r\n     */\r\n    public menuDefaults(): void {\r\n        // Clickable submenu\r\n        if (document.querySelectorAll(`.${this.nameMenu + this.chiSep + this.nameClick}`).length) {\r\n            document.querySelectorAll(`.${this.nameMenu + this.chiSep + this.nameClick}`).forEach((elem: any) => {\r\n                elem.querySelector(`.${this.nameMenu + this.chiSep + this.nameClick} a`).onclick = () => {\r\n                    // Submenu\r\n                    let submenu = elem.querySelector(`.${this.nameMenu + this.chiSep + this.nameClick} ul`);\r\n\r\n                    // Check animated submenu\r\n                    if (submenu.classList.contains(`${this.nameAnimation}`)) {\r\n                        let animationIn: string, animationOut: string;\r\n\r\n                        // Menu is open\r\n                        if (submenu.classList.contains(`${this.nameMenu + this.chiSep + this.nameOpen}`)) {\r\n                            animationIn  = \"fadeOut\";\r\n                            animationOut = \"fadeIn\";\r\n\r\n                            // Check data-exit\r\n                            if (submenu.getAttribute(\"data-exit\")) animationIn = submenu.getAttribute(\"data-exit\");\r\n    \r\n                            // Check data-enter\r\n                            if (submenu.getAttribute(\"data-enter\")) animationOut = submenu.getAttribute(\"data-enter\");\r\n                        }\r\n                        // Menu is closed\r\n                        else {\r\n                            animationIn  = \"fadeIn\";\r\n                            animationOut = \"fadeOut\";\r\n\r\n                            // Check data-enter\r\n                            if (submenu.getAttribute(\"data-enter\")) animationIn = submenu.getAttribute(\"data-enter\");\r\n    \r\n                            // Check data-exit\r\n                            if (submenu.getAttribute(\"data-exit\")) animationOut = submenu.getAttribute(\"data-exit\");\r\n                        }\r\n                        \r\n                        // Check data-animation\r\n                        if (this.getStyle(submenu, 'animation-name') !== 'none') {\r\n                            if (this.getStyle(submenu, 'animation-name') == animationIn) {\r\n                                this.animation(submenu, animationOut);\r\n                            }\r\n                            else if (this.getStyle(submenu, 'animation-name') == animationOut) {\r\n                                this.animation(submenu, animationIn);\r\n                            }\r\n                        } else {\r\n                            this.animation(submenu, animationIn);\r\n                        }\r\n                    }\r\n                    // Remove open class (hide menu)\r\n                    else if (submenu.classList.contains(`${this.nameMenu + this.chiSep + this.nameOpen}`)) {\r\n                        submenu.classList.remove(`${this.nameMenu + this.chiSep + this.nameOpen}`);\r\n                    }\r\n                    // Add open class (show menu)\r\n                    else {\r\n                        submenu.classList.add(`${this.nameMenu + this.chiSep + this.nameOpen}`);\r\n                    }\r\n\r\n                    // Prevent default behavior\r\n                    return false;\r\n                };\r\n            });\r\n        }\r\n\r\n        // Hoverable animated submenu\r\n        if (document.querySelectorAll(`.${this.nameMenu} li:not(.${this.nameMenu + this.chiSep + this.nameClick})`).length) {\r\n            document.querySelectorAll(`.${this.nameMenu} li:not(.${this.nameMenu + this.chiSep + this.nameClick})`).forEach((elem: any) => {\r\n                // Submenu\r\n                let submenu = elem.querySelector(`.${this.nameMenu} li ul.${this.nameAnimation}`);\r\n                if (submenu) {\r\n                    let animationIn: string, animationOut: string;\r\n\r\n                    // Menu is open\r\n                    if (submenu.classList.contains(`${this.nameMenu + this.chiSep + this.nameOpen}`)) {\r\n                        animationIn  = \"fadeOut\";\r\n                        animationOut = \"fadeIn\";\r\n\r\n                        // Check data-exit\r\n                        if (submenu.getAttribute(\"data-exit\")) animationIn = submenu.getAttribute(\"data-exit\");\r\n\r\n                        // Check data-enter\r\n                        if (submenu.getAttribute(\"data-enter\")) animationOut = submenu.getAttribute(\"data-enter\");\r\n                    }\r\n                    // Menu is closed\r\n                    else {\r\n                        animationIn  = \"fadeIn\";\r\n                        animationOut = \"fadeOut\";\r\n\r\n                        // Check data-enter\r\n                        if (submenu.getAttribute(\"data-enter\")) animationIn = submenu.getAttribute(\"data-enter\");\r\n\r\n                        // Check data-exit\r\n                        if (submenu.getAttribute(\"data-exit\")) animationOut = submenu.getAttribute(\"data-exit\");\r\n                    }\r\n    \r\n                    // Mouse over\r\n                    elem.onmouseover = () => {\r\n                        // Show submenu\r\n                        this.animation(submenu, animationIn).then();\r\n                    };\r\n    \r\n                    // Mouse out\r\n                    elem.onmouseout = () => {\r\n                        // Hide submenu\r\n                        this.animation(submenu, animationOut);\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Import the parent Class\r\n */ \r\nimport {Defaults} from \"./Defaults\";\r\n\r\n\r\n/**\r\n * @desc Used for loading component blueprints\r\n */ \r\nexport class Blueprints extends Defaults {\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Appends backdrop blueprint if not exists\r\n     * \r\n     * @return {void}\r\n     */\r\n    public backdropBlueprint(): void {\r\n        // Check backdrop blueprint\r\n        if (!document.querySelector(`#${this.nameBackdrop + '-' + this.nameBlueprint}`)) {\r\n            // Append backdrop blueprint\r\n            this.append(\"div\", \"body\", \"\", [this.nameBackdrop, this.nameAnimation, this.nameAnimation + this.modSep + this.nameAnimated], this.nameBackdrop + this.modSep + this.nameBlueprint);\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Appends alert blueprint if not exists\r\n     * \r\n     * @return {void}\r\n     */\r\n    public alertBlueprint(): void {\r\n        // Check alert blueprint\r\n        if (!document.querySelector(`#${this.nameAlert + '-' + this.nameBlueprint}`)) {\r\n            // Append alert blueprint\r\n            this.append(\"div\", \"body\", \"\", [this.nameAlert + this.parSep + this.nameContainer, this.nameAlert + this.parSep + this.nameContainer + this.modSep + this.alertPosition], this.nameAlert + this.modSep + this.nameBlueprint);\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * @desc Append modal blueprint if not exists\r\n     * \r\n     * @return {void}\r\n     */\r\n    public modalBlueprint(): void {\r\n        // Check modal blueprint\r\n        if (!document.querySelector(`#${this.nameModal + '-' + this.nameBlueprint}`)) {\r\n            // Append modal blueprint\r\n            this.append(\"div\", \"body\", \"\", [this.nameModal + this.parSep + this.nameContainer, this.nameAnimation, this.nameAnimation + this.modSep + this.nameAnimated], this.nameModal + this.modSep + this.nameBlueprint);\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Polaris Framework v0.9.1-beta\r\n * MIT License github.com/heminsatya/polaris-core | © 2022 polarisui.com\r\n**/\r\n/**\r\n * Import the Core Class\r\n */ \r\nimport {Core} from \"./modules/Core\";\r\n\r\n\r\n/**\r\n * Polaris object\r\n */\r\nconst Polaris = Core;\r\n\r\n\r\n/**\r\n * Export default\r\n */\r\nexport default Polaris;","/**\r\n * Import the parent Class\r\n */ \r\nimport {Blueprints} from \"./Blueprints\";\r\n\r\n\r\n/**\r\n * @desc Used for method chaining & initializing defaults & loading Blueprints\r\n */ \r\nexport class Core extends Blueprints {\r\n\r\n    /**\r\n     * Properties\r\n     */\r\n    public  node: any;\r\n\tprivate mode: any;\r\n\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor(node: any = null, mode: any = null) {\r\n        // Inherit the parent class\r\n        super();\r\n\r\n        // Initialize properties\r\n        this.node = node;\r\n        this.mode = mode;\r\n\r\n        // Check the selector\r\n        if (node && typeof(node) === \"string\") {\r\n            // Array node\r\n            if (mode === \"all\") {\r\n                this.node = document.querySelectorAll(node);\r\n            }\r\n            // Single node\r\n            else {\r\n                this.node = document.querySelector(node);\r\n            }\r\n            \r\n            // Chain the node\r\n            this.chain();\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Used for method chaining\r\n     * \r\n     * @return {any}\r\n     */\r\n    private chain(): any {\r\n\t\treturn this.node;\r\n\t}\r\n\r\n\r\n    /**\r\n     * @desc addEventListener shorthand\r\n     * \r\n     * @param {string}   e  -- The event name\r\n     * @param {function} fn -- The callback function\r\n     * \r\n     * @return {Object}\r\n     */\r\n\tpublic event(e:string, fn: any): Object {\r\n        // Check the selector\r\n        if (typeof(this.node) === \"object\") {\r\n            // Prepare the result\r\n            this.node = this.node.addEventListener(e, () => fn());\r\n\r\n            // Chain the result\r\n            return this.chain();\r\n        }\r\n        else {\r\n            throw `The method \"event()\" is only available if a selector passed into the class \"Polaris\".`;\r\n        }\r\n\t}\r\n\r\n\r\n    /**\r\n     * @desc innerHTML simplified\r\n     * \r\n     * @param {string} content - The optional content\r\n     * \r\n     * @return {void | object}\r\n     */\r\n\tpublic html(content: string = \"\"): void | object {\r\n        // Check the selector\r\n        if (typeof(this.node) === \"object\") {\r\n            // Prepare the result\r\n            if (content) {\r\n                this.node.innerHTML = content;\r\n            }\r\n            else {\r\n                this.node = this.node.innerHTML;\r\n            }\r\n\r\n            // Chain the result\r\n            return this.chain();\r\n        }\r\n        else {\r\n            throw `The method \"html()\" is only available if a selector passed into the class \"Polaris\".`;\r\n        }\r\n\t}\r\n\r\n\r\n    /**\r\n     * @desc The objects length\r\n     * \r\n     * @return {number}\r\n     */\r\n\tpublic length(): number {\r\n        // Check the selector\r\n        if (typeof(this.node) === \"object\") {\r\n            // Prepare the result\r\n            this.node = this.node.length;\r\n        \r\n            // Chain the result\r\n            return this.chain();\r\n        }\r\n        else {\r\n            throw `The method \"length()\" is only available if a selector passed into the class \"Polaris\".`;\r\n        }\r\n\t}\r\n\r\n\r\n    /**\r\n     * Initializes the Polaris class\r\n     * \r\n     * @return {void}\r\n     */\r\n    init(): void {\r\n        /**\r\n         *  Load Defaults\r\n         */\r\n        /**\r\n         *  Document default classes\r\n         */\r\n        this.docDefaults();\r\n\r\n\r\n        /**\r\n         *  Void links\r\n         */\r\n        this.linkDefaults();\r\n\r\n\r\n        /**\r\n         *  Ripple animations\r\n         */\r\n        this.rippleDefaults();\r\n\r\n\r\n        /**\r\n         *  Animation datasets\r\n         */\r\n        this.animationDefaults();\r\n        \r\n\r\n        /**\r\n         *  Closable messages\r\n         */\r\n        this.messageDefaults();\r\n        \r\n\r\n        /**\r\n         *  Clickable & animated popups\r\n         */\r\n        this.popupDefaults();\r\n\r\n        \r\n        /**\r\n         *  Clickable & animated menus\r\n         */\r\n        this.menuDefaults();\r\n\r\n        \r\n        /**\r\n         *  Load Blueprints\r\n         */\r\n        /**\r\n         *  Backdrop blueprint\r\n         */\r\n        this.backdropBlueprint();\r\n\r\n        \r\n        /**\r\n         *  Alert blueprint\r\n         */\r\n        this.alertBlueprint();\r\n\r\n\r\n        /**\r\n         *  Modal blueprint\r\n         */\r\n        this.modalBlueprint();\r\n    }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Config","modSep","chiSep","sibSep","parSep","nameDoc","nameLight","nameDark","nameAnimation","nameAnimated","nameRipple","nameAlert","nameMessages","nameBackdrop","namePopup","nameMenu","nameModal","nameBlueprint","nameContainer","nameControl","nameIcon","nameContent","nameClose","nameClick","nameActive","nameVoid","nameOpen","nameHeader","nameBody","nameFooter","nameWidth","nameHeight","nameRadius","namePosition","fadeInAnimation","fadeOutAnimation","hideYAnimation","rippleAnimation","rippleAutoAnimation","piAlertCircle","piAlertTri","piAlertTick","piClose","hideTimeout","alertPosition","polarisSizes","phoneWidth","tabletWidth","desktopWidth","Helpers","constructor","super","removeBefore","str","find","strict","split","pop","removeAfter","check","selector","result","status","message","document","querySelectorAll","length","this","querySelector","selectors","visible","from","tolerance","rect","windowHeight","window","innerHeight","viewHeight","Math","max","documentElement","clientHeight","getBoundingClientRect","bottom","top","prepend","parent","content","classList","id","style","attrs","parentNode","node","createElement","forEach","cls","add","setAttribute","cssText","attr","innerHTML","insertBefore","firstChild","append","appendChild","remove","write","open","close","loop","fn","delay","count","Infinity","i","interval","setInterval","clearInterval","loaded","addEventListener","escape","replace","RegExp","redirect","url","location","href","origin","scrollWidth","innerWidth","clientWidth","exist","file","xhr","XMLHttpRequest","send","json","Promise","resolve","reject","final","fetch","then","response","text","copy","navigator","clipboard","writeText","err","console","error","addClass","contains","removeClass","toggleClass","clsOld","clsNew","addClasses","upper","toLocaleUpperCase","lower","toLocaleLowerCase","getStyle","property","view","ownerDocument","defaultView","getComputedStyle","getPropertyValue","Animations","animation","clear","removeProperty","datasets","setProperty","event","stopPropagation","once","dataset","duration","function","state","position","scale","perspective","degree","height","width","brightness","dimension","animated","mod","nodes","animationEnter","enter","animationExit","exit","animating","getAttribute","offsetTop","navigated","active","navigators","scrollY","offsetHeight","offset","link","Alerts","alert","color","statusCode","statusClass","colorClass","closeCode","closeClass","element","child","timeout","setTimeout","onclick","clearTimeout","Modal","modal","title","body","footer","size","backdrop","sizeCLass","includes","footerCode","bdrop","outerHTML","bodyElement","paddingRight","overflow","setModal","Defaults","docDefaults","doc","scheme","matchMedia","matches","onchange","linkDefaults","elem","rippleDefaults","x","clientX","y","clientY","REC","DIM","sqrt","pow","removeAttribute","left","animationDefaults","messageDefaults","parentElement","popupDefaults","popup","ignoreClick","j","target","menuDefaults","submenu","animationIn","animationOut","onmouseover","onmouseout","Blueprints","backdropBlueprint","alertBlueprint","modalBlueprint","mode","chain","e","html","init"],"sourceRoot":""}